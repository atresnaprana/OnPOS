@model BataAppHR.Models.dbRD

@{
    ViewData["Title"] = "Create";
    var filename1 = Model.FILE_SERTIFIKAT1;
    var filename2 = Model.FILE_SERTIFIKAT2;
    var filename3 = Model.RD_PHOTO;
    var resigntype = Model.RESIGN_TYPE;
    var resigntype2 = Model.RESIGN_TYPE2;
    var resignTxt = Model.RESIGN_TXT;
    var isAdmin = User.IsInRole("Admin").ToString();
    var filenameMedic = Model.FILE_MEDIC;
    var edp = ViewBag.edp;

}
<style>
    input.largerCheckbox {
        width: 20px;
        height: 20px;
    }
</style>
<h1>Edit</h1>
<h3>Form Edit</h3>
<hr />
<form asp-action="Edit" id="formcreate" enctype="multipart/form-data">
    <div class="container">
        <div class="row">
            <div class="col-sm">
                <div class="form-group">
                    <table>
                        <tr>
                            <td>
                                <label class="control-label">EDP Code:</label>
                                <br />
                                @*<input asp-for="EDP_CODE" class="form-control" onkeypress="return allowOnlyNumber(event);" />*@
                                @if (!string.IsNullOrEmpty(edp))
                                {
                                    <input asp-for="EDP_CODE" class="form-control" readonly />

                                }
                                else
                                {
                                    @Html.DropDownListFor(m => m.EDP_CODE_LIST, new SelectList(Model.ddEdp, "edp", "store_location"), new { @class = "form-control" })

                                }
                                <span asp-validation-for="EDP_CODE_LIST" class="text-danger"></span>
                            </td>

                        </tr>
                    </table>

                </div>
                
                <div class="form-group">
                    <label class="control-label">Nama RD:</label>
                    <input asp-for="NM_RD" class="form-control" />
                    <span asp-validation-for="NM_RD" class="text-danger"></span>
                    <input asp-for="RD_CODE" type="hidden" class="form-control" />
                </div>
                <div class="form-group">
                    <table>
                        <tr>
                            <td>
                                <label class="control-label">Jenis Kelamin:</label>
                                <br />
                                @Html.DropDownListFor(model => model.SEX, new List<SelectListItem>
                                {
                                    new SelectListItem{ Text="Male", Value = "L" },
                                    new SelectListItem{ Text="Female", Value = "P" },
                                 })
                                <span asp-validation-for="SEX" class="text-danger"></span>
                            </td>
                            
                        </tr>
                    </table>

                </div>
                <div class="form-group">
                    <label class="control-label">Vaksin 1:</label>
                    <i style="font-size:smaller">
                        Max Size: 4MB,
                        file: JPG, JPEG, PNG
                    </i>
                    <br />
                    <table>
                        <tr>
                            <td>
                                <input asp-for="VAKSIN1Bool" class="largerCheckbox" />

                            </td>
                            <td align="center" style="padding-left:20px;">
                                <input type="file" asp-for="fileVaksin1" />
                                <br />
                                <a href="#" id="fileName1"></a>
                            </td>
                        </tr>
                    </table>
                    <span asp-validation-for="VAKSIN1Bool" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <br />
                    <label class="control-label">Vaksin 2:</label>
                    <i style="font-size:smaller">
                        Max Size: 4MB,
                        file: JPG, JPEG, PNG
                    </i>
                    <br />
                    <table>
                        <tr>
                            <td>
                                <input asp-for="VAKSIN2Bool" class="largerCheckbox" />
                            </td>
                            <td align="center" style="padding-left:20px;">
                                <input type="file" asp-for="fileVaksin2" />
                                <br />
                                <a href="#" id="fileName2"></a>
                            </td>
                        </tr>
                    </table>
                    <span asp-validation-for="VAKSIN2Bool" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <br />
                    <label class="control-label">Medical Letter:</label>
                    <i style="font-size:smaller">
                        Max Size: 4MB
                    </i>
                    <br />
                    <table>
                        <tr>
                            <td>
                            </td>
                            <td align="right" style="padding-left:40px;">
                                <input type="file" asp-for="fileMedic" />
                                <br />
                                <a href="#" id="fileNameMedic"></a>
                            </td>
                        </tr>
                    </table>
                </div>

            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    <label class="control-label">KTP: </label>
                    <input asp-for="No_KTP" class="form-control" onkeypress="return allowOnlyNumber(event);" />
                    <span asp-validation-for="No_KTP" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">No HP:</label>
                    <input asp-for="RD_HP" class="form-control" onkeypress="return allowOnlyNumber(event);" />
                    <span asp-validation-for="RD_HP" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">Email:</label>
                    <input asp-for="RD_EMAIL" class="form-control" />
                    <span asp-validation-for="RD_EMAIL" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">Size Seragam:</label>
                    <br />
                    @Html.DropDownListFor(model => model.RD_SERAGAM_SIZE, new List<SelectListItem>
                    {
                        new SelectListItem{ Text="S", Value = "S" },
                        new SelectListItem{ Text="M", Value = "M" },
                        new SelectListItem{ Text="L", Value = "L" },
                        new SelectListItem{ Text="XL", Value = "XL" },
                     })
                    <span asp-validation-for="RD_SERAGAM_SIZE" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">Size Sepatu (UK):</label>
                    <input asp-for="RD_SEPATU_SIZEUK" class="form-control" onkeypress="return allowOnlyNumber(event);" />
                    <span asp-validation-for="RD_SEPATU_SIZEUK" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">Foto RD: </label>
                    <i style="font-size:smaller">
                        Max: 4MB,
                        file: JPG, JPEG, PNG
                    </i>
                    <br />
                    <input type="file" asp-for="filePhoto" />
                    <br />
                    <a href="#" id="fileName3"></a>
                    <br />
                    <img id="SSPhotoId" src="" width="150" height="230">
                </div>
            </div>
            <div class="col-sm">
                <div class="form-group">
                    <label class="control-label">Tanggal Join:</label>
                    <input type="date" asp-for="JOIN_DATE" class="form-control" />
                    <span asp-validation-for="JOIN_DATE" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">Tanggal Resign:</label>
                    <input type="date" asp-for="RESIGN_DATE" class="form-control" />
                    <span asp-validation-for="RESIGN_DATE" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <table>
                        <tr>
                            <td>
                                <label class="control-label">Resign Type:</label>
                                <br />
                                <input type="text" asp-for="RESIGN_TYPE" class="form-control" readonly />
                                <span asp-validation-for="RESIGN_TYPE" class="text-danger"></span>
                            </td>
                            <td align="center">
                                <label class="control-label">Resign Type 2:</label>
                                <input type="text" asp-for="RESIGN_TYPE2" class="form-control" readonly />
                            </td>

                        </tr>
                    </table>

                </div>
                <div class="form-group">
                    <label class="control-label">Alasan Resign:</label>
                    <br />
                    @Html.DropDownListFor(model => model.RESIGN_TXT, new List<SelectListItem>
                      {
                         new SelectListItem{ Text="Mengundurkan Diri - Berakhirnya Kontrak Kerja", Value = "Resignation - End of Short Term Contract" },
                         new SelectListItem{ Text="Mengundurkan Diri - Berakhirnya Kontrak Kerja Magang", Value = "Resignation - End of Internship Agreement" },
                         new SelectListItem{ Text="Diberhentikan - Berakhirnya Kontrak Kerja", Value = "Dismissal - End of Short Term Contract" },
                         new SelectListItem{ Text="Diberhentikan - Pengurangan karyawan", Value = "Dismissal - Business Retrenchment" },
                         new SelectListItem{ Text="Diberhentikan - Tidak lulus masa percobaan", Value = "Dismissal - Probationary not passed" },
                         new SelectListItem{ Text="Diberhentikan - Perilaku yang tidak baik", Value = "Dismissal - Attitude" },
                         new SelectListItem{ Text="Diberhentikan - Kinerja tidak baik", Value = "Dismissal - Performance" },
                         new SelectListItem{ Text="Diberhentikan - Melanggar aturan perusahaan", Value = "Dismissal - Go Against Company Policy" },
                         new SelectListItem{ Text="Diberhentikan - Tidak bersedia untuk pindah ke toko lain", Value = "Dismissal - Unwilling to change store" },
                         new SelectListItem{ Text="Diberhentikan - Tidak masuk kerja", Value = "Dismissal - Absent From Work" },
                         new SelectListItem{ Text="Diberhentikan - Diminta untuk berhenti bekerja", Value = "Dismissal - Persuade to quit" },
                         new SelectListItem{ Text="Diberhentikan - Toko sudah tidak aktif", Value = "Dismissal - Closing Store" },
                         new SelectListItem{ Text="Mengundurkan Diri - Pengembangan Karir", Value = "Resignation - Career Development" },
                         new SelectListItem{ Text="Mengundurkan Diri - Beban pekerjaan", Value = "Resignation - Content & Workload" },
                         new SelectListItem{ Text="Mengundurkan Diri - Tidak bersedia untuk pindah ke toko lain", Value = "Resignation - Unwilling to Change Store" },
                         new SelectListItem{ Text="Mengundurkan Diri - Hubungan Kerja", Value = "Resignation - Work Relationship" },
                         new SelectListItem{ Text="Mengundurkan Diri - Pengaturan jam kerja shift", Value = "Resignation - Shift Arrangement" },
                         new SelectListItem{ Text="Mengundurkan Diri - Melanjutkan sekolah", Value = "Resignation - Further study" },
                         new SelectListItem{ Text="Mengundurkan Diri -  Alasan pribadi", Value = "Resignation - Personal reasons" },
                         new SelectListItem{ Text="Mengundurkan Diri - Alasan kesehatan", Value = "Resignation - Health problems" },
                         new SelectListItem{ Text="Mengundurkan Diri - Jarak toko", Value = "Resignation - Commuting Distance" },
                         new SelectListItem{ Text="Mengundurkan Diri - Pulang kampung", Value = "Resignation - Move to hometown" },
                         new SelectListItem{ Text="Mengundurkan Diri - Mengurus keluarga", Value = "Resignation - Take care of family" },
                         new SelectListItem{ Text="Mengundurkan Diri - Mencari pekerjaan yang lebih baik", Value = "Resignation - Looking for another job" },
                         new SelectListItem{ Text="Mengundurkan Diri - Telah mendapatkan pekerjaan baru", Value = "Resignation - Got a new job" },
                         new SelectListItem{ Text="Mengundurkan Diri - Menikah", Value = "Resignation - Married" },
                         new SelectListItem{ Text="Mengundurkan Diri - Memulai usaha sendiri", Value = "Resignation - Enterpreneurship" },
                         new SelectListItem{ Text="Diberhentikan - Berakhirnya Kontrak Kerja Magang", Value = "Dismissal - End of Internship Agreement" },
                         new SelectListItem{ Text="Mengundurkan Diri - Kompensasi dan Benefit", Value = "Resignation - Compensation & Benefits" },
                         new SelectListItem{ Text="Mengundurkan Diri - Lainnya", Value = "Resignation - Others" },
                       })
                    <span asp-validation-for="RESIGN_TXT" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">Lama Kerja:</label>
                    <input asp-for="LAMA_KERJA" type="hidden" class="form-control" />
                    <table>
                        <tr>
                            <td>
                                <table>
                                    <tr>
                                        <td>
                                            <label class="control-label">Year:</label>

                                        </td>
                                        <td>
                                            <input asp-for="YEAR_LENGTH" class="form-control" readonly />

                                        </td>
                                    </tr>
                                </table>
                            </td>
                            <td>
                                <table>
                                    <tr>
                                        <td>
                                            <label class="control-label">Month:</label>

                                        </td>
                                        <td>
                                            <input asp-for="MONTH_LENGTH" class="form-control" readonly />

                                        </td>
                                    </tr>
                                </table>
                            </td>
                            <td>
                                <table>
                                    <tr>
                                        <td>
                                            <label class="control-label">Days:</label>

                                        </td>
                                        <td>
                                            <input asp-for="DAYS_LENGTH" class="form-control" readonly />

                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                    <span asp-validation-for="LAMA_KERJA" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">Emergency Contact:</label>
                    <input asp-for="EMERGENCY_NAME" class="form-control" />
                    <span asp-validation-for="EMERGENCY_NAME" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">Emergency Phone:</label>
                    <input asp-for="EMERGENCY_PHONE" class="form-control" onkeypress="return allowOnlyNumber(event);" />
                    <span asp-validation-for="EMERGENCY_PHONE" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">Emergency Address:</label>
                    <textarea asp-for="EMERGENCY_ADDRESS" class="form-control"></textarea>
                    <span asp-validation-for="EMERGENCY_ADDRESS" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="button" value="Simpan perubahan" onclick="alertfirst()" class="btn btn-red" />
                </div>
            </div>
        </div>
    </div>
</form>


<div>
    <a asp-action="Index" class="btn btn-dark">Kembali ke list</a>
</div>
@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
<script>
        $(document).ready(function () {
            $("#EDP_CODE_LIST").select2({
                placeholder: "Select Edp Code",
                multiple: true,
                initSelection: function (element, callback) {
                },
                dropdownAutoWidth: true,
                width: 'auto'
            });
            debugger;
            var rdval = $("#RD_CODE").val();
            $.ajax({
                url: '@Url.Action("getMultiValue", "FormDataRD")',
                type: "GET",
                data: { rdcode: rdval },
                //startDate: mFromDate, endDate: mToDate1
                dataType: 'json',
                success: function (data) {
                    debugger;
                    var arrays = [];
                    //Append each row to html table
                    for (var i = 0; i < data.length; i++) {
                        arrays.push(data[i]);
                    }
                    debugger;
                    $("#EDP_CODE_LIST").val(arrays);
                    $("#EDP_CODE_LIST").change();
                },
                error: function () {

                }

            });
          
            $("#RESIGN_TXT").select2({
                placeholder: "Select value",
                initSelection: function (element, callback) {
                },
                dropdownAutoWidth: true,
                width: 'auto'
            });

            var resignTxts = '@resignTxt';
            if (resignTxts == null || resignTxts == "") {
                debugger;
                $("#RESIGN_TXT").val(null);
                $("#RESIGN_TXT").trigger('change');
            }
            var imgctrl1 = $("#SSPhotoId");
            var linkPhoto = '@filename3';
            if (linkPhoto != null && linkPhoto != "" && linkPhoto != "null") {
                var iPhotoUrl1 = "/UploadsPhotoRD/" + linkPhoto;
                imgctrl1.attr("src", iPhotoUrl1);
            }

            //$("#RESIGN_TXT").val(null);
            //$("#RESIGN_TXT").trigger('change');

            var filename1 = '@filename1';
            var filename2 = '@filename2';
            var filename3 = '@filename3';
            var filemedic = '@filenameMedic';

            $("#fileName1").html(filename1);
            $("#fileName2").html(filename2);
            $("#fileName3").html(filename3);
            $("#fileNameMedic").html(filemedic);

            $("#fileName1").attr("href", "/FormDataRD/DownloadVaksin1?fname=" + filename1);
            $("#fileName2").attr("href", "/FormDataRD/DownloadVaksin2?fname=" + filename2);
            $("#fileName3").attr("href", "/FormDataRD/DownloadPhoto?fname=" + filename3);
            $("#fileNameMedic").attr("href", "/FormDataRD/DownloadMedic?fname=" + filemedic);

            if ($("#JOIN_DATE").val() != null && $("#JOIN_DATE").val() != "") {
                var startingDate = new Date($("#JOIN_DATE").val());
                if ($("#RESIGN_DATE").val() != null && $("#RESIGN_DATE").val() != "") {
                    var endingDate = new Date($("#RESIGN_DATE").val());
                    if (startingDate < endingDate) {
                        //var diff = resigndateval - joindateval;
                        //var days = Math.round(diff / 1000 / 60 / 60 / 24);
                        var startDate = new Date(new Date(startingDate).toISOString().substr(0, 10));
                        if (!endingDate) {
                            endingDate = new Date().toISOString().substr(0, 10);    // need date in YYYY-MM-DD format
                        }
                        var endDate = new Date(endingDate);
                        if (startDate > endDate) {
                            var swap = startDate;
                            startDate = endDate;
                            endDate = swap;
                        }
                        var startYear = startDate.getFullYear();
                        var february = (startYear % 4 === 0 && startYear % 100 !== 0) || startYear % 400 === 0 ? 29 : 28;
                        var daysInMonth = [31, february, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

                        var yearDiff = endDate.getFullYear() - startYear;
                        var monthDiff = endDate.getMonth() - startDate.getMonth();
                        if (monthDiff < 0) {
                            yearDiff--;
                            monthDiff += 12;
                        }
                        var dayDiff = endDate.getDate() - startDate.getDate();
                        if (dayDiff < 0) {
                            if (monthDiff > 0) {
                                monthDiff--;
                            } else {
                                yearDiff--;
                                monthDiff = 11;
                            }
                            dayDiff += daysInMonth[startDate.getMonth()];
                        }
                        var stringdur = yearDiff + ' Years ' + monthDiff + ' Months ' + dayDiff + ' Days ';
                        $("#YEAR_LENGTH").val(yearDiff);
                        $("#MONTH_LENGTH").val(monthDiff);
                        $("#DAYS_LENGTH").val(dayDiff);
                        $("#LAMA_KERJA").val(stringdur);
                    } else {
                        $(this).val(null);
                        $("#YEAR_LENGTH").val("");
                        $("#MONTH_LENGTH").val("");
                        $("#DAYS_LENGTH").val("");
                        $("#LAMA_KERJA").val("");
                        alert("Incorrect date format");
                    }
                } else {
                    var datenow = new Date(new Date(Date.now()).toISOString().substr(0, 10));
                    if (startingDate < datenow) {
                        var startDate = new Date(new Date(startingDate).toISOString().substr(0, 10));
                        //if (!endingDate) {
                        //    endingDate = new Date().toISOString().substr(0, 10);    // need date in YYYY-MM-DD format
                        //}
                        var endDate = new Date(datenow);
                        if (startDate > endDate) {
                            var swap = startDate;
                            startDate = endDate;
                            endDate = swap;
                        }
                        var startYear = startDate.getFullYear();
                        var february = (startYear % 4 === 0 && startYear % 100 !== 0) || startYear % 400 === 0 ? 29 : 28;
                        var daysInMonth = [31, february, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

                        var yearDiff = endDate.getFullYear() - startYear;
                        var monthDiff = endDate.getMonth() - startDate.getMonth();
                        if (monthDiff < 0) {
                            yearDiff--;
                            monthDiff += 12;
                        }
                        var dayDiff = endDate.getDate() - startDate.getDate();
                        if (dayDiff < 0) {
                            if (monthDiff > 0) {
                                monthDiff--;
                            } else {
                                yearDiff--;
                                monthDiff = 11;
                            }
                            dayDiff += daysInMonth[startDate.getMonth()];
                        }
                        var stringdur = yearDiff + ' Years ' + monthDiff + ' Months ' + dayDiff + ' Days ';
                        $("#YEAR_LENGTH").val(yearDiff);
                        $("#MONTH_LENGTH").val(monthDiff);
                        $("#DAYS_LENGTH").val(dayDiff);
                        $("#LAMA_KERJA").val(stringdur);
                    } else {
                        $(this).val(null);
                        $("#YEAR_LENGTH").val("");
                        $("#MONTH_LENGTH").val("");
                        $("#DAYS_LENGTH").val("");
                        $("#LAMA_KERJA").val("");
                        alert("Incorrect date format");
                    }
                }
            }
            //$("#EDP_CODE").val(null);
            //$("#EDP_CODE").trigger('change');

        });

    $('#EDP_CODE_LIST').on('change', function () {
            var value = $("#EDP_CODE").val();
        });
    $("#RESIGN_DATE").on("change", function () {
        var endingDate = new Date($(this).val());
        var startingDate = new Date($("#JOIN_DATE").val());
        //return yearDiff + 'Y ' + monthDiff + 'M ' + dayDiff + 'D';
        if (startingDate < endingDate) {
            //var diff = selectedValue - joindateval;
            //var days = Math.round(diff / 1000 / 60 / 60 / 24);
            //var month = Math.round(days / 31);
            //var year = Math.round(month / 12);
            //alert("days: " + days + "month: " + month + "year: " + year);
            var startDate = new Date(new Date(startingDate).toISOString().substr(0, 10));
            if (!endingDate) {
                endingDate = new Date().toISOString().substr(0, 10);    // need date in YYYY-MM-DD format
            }
            var endDate = new Date(endingDate);
            if (startDate > endDate) {
                var swap = startDate;
                startDate = endDate;
                endDate = swap;
            }
            var startYear = startDate.getFullYear();
            var february = (startYear % 4 === 0 && startYear % 100 !== 0) || startYear % 400 === 0 ? 29 : 28;
            var daysInMonth = [31, february, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

            var yearDiff = endDate.getFullYear() - startYear;
            var monthDiff = endDate.getMonth() - startDate.getMonth();
            if (monthDiff < 0) {
                yearDiff--;
                monthDiff += 12;
            }
            var dayDiff = endDate.getDate() - startDate.getDate();
            if (dayDiff < 0) {
                if (monthDiff > 0) {
                    monthDiff--;
                } else {
                    yearDiff--;
                    monthDiff = 11;
                }
                dayDiff += daysInMonth[startDate.getMonth()];
            }
            var stringdur = yearDiff + ' Years ' + monthDiff + ' Months ' + dayDiff + ' Days ';
            $("#YEAR_LENGTH").val(yearDiff);
            $("#MONTH_LENGTH").val(monthDiff);
            $("#DAYS_LENGTH").val(dayDiff);
            $("#LAMA_KERJA").val(stringdur);
        } else {
            $(this).val(null);
            $("#YEAR_LENGTH").val("");
            $("#MONTH_LENGTH").val("");
            $("#DAYS_LENGTH").val("");
            $("#LAMA_KERJA").val("");
            alert("Incorrect date format");
        }
    });
    $("#JOIN_DATE").on("change", function () {
        var startingDate = new Date($(this).val());
        var endingDate = new Date($("#RESIGN_DATE").val());
        if ($("#RESIGN_DATE").val() != null && $("#RESIGN_DATE").val() != "") {
            if (startingDate < endingDate) {
                //var diff = resigndateval - joindateval;
                //var days = Math.round(diff / 1000 / 60 / 60 / 24);
                var startDate = new Date(new Date(startingDate).toISOString().substr(0, 10));
                if (!endingDate) {
                    endingDate = new Date().toISOString().substr(0, 10);    // need date in YYYY-MM-DD format
                }
                var endDate = new Date(endingDate);
                if (startDate > endDate) {
                    var swap = startDate;
                    startDate = endDate;
                    endDate = swap;
                }
                var startYear = startDate.getFullYear();
                var february = (startYear % 4 === 0 && startYear % 100 !== 0) || startYear % 400 === 0 ? 29 : 28;
                var daysInMonth = [31, february, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

                var yearDiff = endDate.getFullYear() - startYear;
                var monthDiff = endDate.getMonth() - startDate.getMonth();
                if (monthDiff < 0) {
                    yearDiff--;
                    monthDiff += 12;
                }
                var dayDiff = endDate.getDate() - startDate.getDate();
                if (dayDiff < 0) {
                    if (monthDiff > 0) {
                        monthDiff--;
                    } else {
                        yearDiff--;
                        monthDiff = 11;
                    }
                    dayDiff += daysInMonth[startDate.getMonth()];
                }
                var stringdur = yearDiff + ' Years ' + monthDiff + ' Months ' + dayDiff + ' Days ';
                $("#YEAR_LENGTH").val(yearDiff);
                $("#MONTH_LENGTH").val(monthDiff);
                $("#DAYS_LENGTH").val(dayDiff);
                $("#LAMA_KERJA").val(stringdur);
            } else {
                $(this).val(null);
                $("#YEAR_LENGTH").val("");
                $("#MONTH_LENGTH").val("");
                $("#DAYS_LENGTH").val("");
                $("#LAMA_KERJA").val("");
                alert("Incorrect date format");
            }
        } else {
            var datenow = new Date(new Date(Date.now()).toISOString().substr(0, 10));
            if (startingDate < datenow) {
                var startDate = new Date(new Date(startingDate).toISOString().substr(0, 10));
                //if (!endingDate) {
                //    endingDate = new Date().toISOString().substr(0, 10);    // need date in YYYY-MM-DD format
                //}
                var endDate = new Date(datenow);
                if (startDate > endDate) {
                    var swap = startDate;
                    startDate = endDate;
                    endDate = swap;
                }
                var startYear = startDate.getFullYear();
                var february = (startYear % 4 === 0 && startYear % 100 !== 0) || startYear % 400 === 0 ? 29 : 28;
                var daysInMonth = [31, february, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

                var yearDiff = endDate.getFullYear() - startYear;
                var monthDiff = endDate.getMonth() - startDate.getMonth();
                if (monthDiff < 0) {
                    yearDiff--;
                    monthDiff += 12;
                }
                var dayDiff = endDate.getDate() - startDate.getDate();
                if (dayDiff < 0) {
                    if (monthDiff > 0) {
                        monthDiff--;
                    } else {
                        yearDiff--;
                        monthDiff = 11;
                    }
                    dayDiff += daysInMonth[startDate.getMonth()];
                }
                var stringdur = yearDiff + ' Years ' + monthDiff + ' Months ' + dayDiff + ' Days ';
                $("#YEAR_LENGTH").val(yearDiff);
                $("#MONTH_LENGTH").val(monthDiff);
                $("#DAYS_LENGTH").val(dayDiff);
                $("#LAMA_KERJA").val(stringdur);
            } else {
                $(this).val(null);
                $("#YEAR_LENGTH").val("");
                $("#MONTH_LENGTH").val("");
                $("#DAYS_LENGTH").val("");
                $("#LAMA_KERJA").val("");
                alert("Incorrect date format");
            }
        }

    });
    $('#RESIGN_TXT').on('change', function () {
        var index = $("#RESIGN_TXT").prop('selectedIndex');
        var EndContract = [0, 1, 2, 3];
        var FailedProbation = [4];
        var Performance = [5, 6, 7, 8, 9, 10];
        var StoreClose = [11];
        var Career = [12];
        var Content = [13, 14, 15, 16];
        var Study = [17];
        var Personal = [18, 19, 20, 21, 22, 23, 24, 25, 26, 27];
        var Salary = [28];
        var Other = [29];
        var val = $("#RESIGN_TXT").val();
        if (val != null) {
            var splitval = val.split(" - ");
            var type = splitval[0];
            if (type == "Resignation") {
                $('#RESIGN_TYPE').val("Voluntary");
            } else {
                $('#RESIGN_TYPE').val("Dismissal");
            }
        }

        if (EndContract.indexOf(index) !== -1) {
            $('#RESIGN_TYPE2').val("End Contract");
        }
        else
            if (FailedProbation.indexOf(index) !== -1) {
                $('#RESIGN_TYPE2').val("Failed probation");
            }
            else
                if (Performance.indexOf(index) !== -1) {
                    $('#RESIGN_TYPE2').val("Performance");
                }
                else
                    if (StoreClose.indexOf(index) !== -1) {
                        $('#RESIGN_TYPE2').val("Store Closed");
                    }
                    else
                        if (Career.indexOf(index) !== -1) {
                            $('#RESIGN_TYPE2').val("Career Development");
                        }
                        else
                            if (Content.indexOf(index) !== -1) {
                                $('#RESIGN_TYPE2').val("Content & Workload");
                            }
                            else
                                if (Study.indexOf(index) !== -1) {
                                    $('#RESIGN_TYPE2').val("Further Study");
                                }
                                else
                                    if (Personal.indexOf(index) !== -1) {
                                        $('#RESIGN_TYPE2').val("Personal Reasons");
                                    }
                                    else
                                        if (Salary.indexOf(index) !== -1) {
                                            $('#RESIGN_TYPE2').val("Salary Reasons");
                                        }
                                        else
                                            if (Other.indexOf(index) !== -1) {
                                                $('#RESIGN_TYPE2').val("Other");
                                            }
    });
    $('#filePhoto').on('change', function () {
        const size =
            (this.files[0].size / 1024 / 1024).toFixed(2);
        debugger;
        var errmsg = "";
        if (size > 4) {
            $('#filePhoto').val('');
            //alert("File size maximum is 4 MB");
            errmsg += "File size maximum is 4 MB \r\n";
        }
        var fileExtension = ['jpeg', 'jpg', 'png'];
        if ($.inArray($(this).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
            //alert("Only formats are allowed : " + fileExtension.join(', '));
            errmsg += "Only formats are allowed : " + fileExtension.join(', ');

        }
        if (errmsg != "") {
            $('#filePhoto').val('');
            alert(errmsg);
        }

    });
    $('#fileVaksin1').on('change', function () {
        const size =
            (this.files[0].size / 1024 / 1024).toFixed(2);
        debugger;
        var errmsg = "";
        if (size > 4) {
            //alert("File size maximum is 4 MB");
            errmsg += "File size maximum is 4 MB \r\n";
        }
        var fileExtension = ['jpeg', 'jpg', 'png'];
        if ($.inArray($(this).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
            //alert("Only formats are allowed : " + fileExtension.join(', '));
            errmsg += "Only formats are allowed : " + fileExtension.join(', ');

        }
        if (errmsg != "") {
            $('#fileVaksin1').val('');
            alert(errmsg);
        }

    });
    $('#fileVaksin2').on('change', function () {
        const size =
            (this.files[0].size / 1024 / 1024).toFixed(2);
        debugger;
        var errmsg = "";
        if (size > 4) {
            //alert("File size maximum is 4 MB");
            errmsg += "File size maximum is 4 MB \r\n";
        }
        var fileExtension = ['jpeg', 'jpg', 'png'];
        if ($.inArray($(this).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
            //alert("Only formats are allowed : " + fileExtension.join(', '));
            errmsg += "Only formats are allowed : " + fileExtension.join(', ');

        }
        if (errmsg != "") {
            $('#fileVaksin2').val('');
            alert(errmsg);
        }

    });
    function allowOnlyNumber(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
    function alertfirst() {
        if (confirm("Are you sure saving data?")) {
            $('#formcreate').submit();
        } else {
            return false;
        }
    }

</script>
}


