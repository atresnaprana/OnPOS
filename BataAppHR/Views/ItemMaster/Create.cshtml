@model OnPOS.Models.dbItemMaster
@{
    ViewData["Title"] = "Create";
    var errmsg = "";
    if (!string.IsNullOrEmpty(Model.syserr))
    {
        errmsg = Model.syserr ;
    }
}

<h1>Create</h1>
<h3>Item Master Entry</h3>
<hr />

<form asp-action="Create" id="formcreate">
    <div class="row">
        <div class="col-sm">
           
            <div class="form-group">
                <label class="control-label">itemid (harus unik)</label>
                <input asp-for="itemid" class="form-control" />
                <span asp-validation-for="itemid" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="color" class="control-label"></label>
                <input asp-for="color" class="form-control" />
                <span asp-validation-for="color" class="text-danger"></span>
            </div>
           
            <div class="form-group">
                <label asp-for="category" class="control-label"></label>
                <br />
                @Html.DropDownListFor(m => m.category, new SelectList(Model.ddcat, "Category", "description"), new { @class = "form-control" })
                <span asp-validation-for="category" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="subcategory" class="control-label"></label>
                <br />
                @Html.DropDownListFor(m => m.subcategory, new SelectList(Model.ddsubcat, "SubCategory", "description"), new { @class = "form-control" })
                <span asp-validation-for="subcategory" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="itemdescription" class="control-label"></label>
                <textarea asp-for="itemdescription" class="form-control"></textarea>
                <span asp-validation-for="itemdescription" class="text-danger"></span>
            </div>
        </div>
        <div class="col-sm">
            <div class="form-group">
                <label class="control-label">Department</label>
                <br />
                @Html.DropDownListFor(m => m.codedivisi, new SelectList(Model.ddDepartment, "id", "name"), new { @class = "form-control" })
                <span asp-validation-for="codedivisi" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="size" class="control-label"></label>
                <input asp-for="size" class="form-control" />
                <span asp-validation-for="size" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="brand" class="control-label"></label>
                <input asp-for="brand" class="form-control" />
                <span asp-validation-for="brand" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="price1" class="control-label"></label>
                <input asp-for="price1" class="form-control"  onkeypress="return allowOnlyNumber(event);" />
                <span asp-validation-for="price1" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="price2" class="control-label"></label>
                <input asp-for="price2" class="form-control" onkeypress="return allowOnlyNumber(event);" />
                <span asp-validation-for="price3" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="price3" class="control-label"></label>
                <input asp-for="price3" class="form-control" onkeypress="return allowOnlyNumber(event);" />
                <span asp-validation-for="price3" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label id="error" class="control-label" style="color:red;font-style:italic;font-weight:bold;">@errmsg</label>
            </div>

        </div>
    </div>
    <div class="form-group">
        <input type="button" value="Save" onclick="alertfirst()" class="btn btn-red" />

    </div>
</form>

<div>
    <a asp-action="Index" class="btn btn-dark">Kembali ke List</a>
</div>
@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            $("#codedivisi").select2({
                placeholder: "Select Category",
                initSelection: function (element, callback) {
                },
                dropdownAutoWidth: true,
                width: 'auto'
            });
            $("#codedivisi").val(null);
            $("#codedivisi").trigger('change');
            $("#category").select2({
                placeholder: "Select Category",
                initSelection: function (element, callback) {
                },
                dropdownAutoWidth: true,
                width: 'auto'
            });
            $("#category").val(null);
            $("#category").trigger('change');
            $("#subcategory").select2({
                placeholder: "Select Sub Category",
                initSelection: function (element, callback) {
                },
                dropdownAutoWidth: true,
                width: 'auto'
            });
            $("#subcategory").val(null);
            $("#subcategory").trigger('change');
            $("#subcategory").prop('disabled', true);

         
        });
        $('#category').on('change', function () {
            var value = $("#category").val();
            if (value != null) {
                $("#subcategory").empty()
                $.ajax({
                    url: '@Url.Action("getsubcatlist", "ItemMaster")',
                    type: "GET",
                    data: { cat: value },
                    //startDate: mFromDate, endDate: mToDate1
                    dataType: 'json',
                    success: function (data) {
                        debugger;
                        if (data.length != 0) {
                            //$("#tbodyiddtl").empty();
                            $("#subcategory").prop('disabled', false);

                            var x = 1;
                            data.forEach(function (item) { //insert rows
                                console.log(item);
                                var newOption = new Option(item.description, item.subCategory, true, true);
                                // Append it to the select
                                // $('#subcategory').append(newOption).trigger('change');
                                $('#subcategory').append(newOption);

                                // $("#subcategory").val(null);
                                // $("#subcategory").trigger('change');
                                x++
                            })




                        } else {
                            $("#subcategory").prop('disabled', true);

                        }

                    },
                    error: function () {

                    }
                });


            }
        });
        function allowOnlyNumber(evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode
            if (charCode > 31 && (charCode < 48 || charCode > 57))
                return false;
            return true;
        }
        function alertfirst() {
            if (confirm("Are you sure saving data?")) {
                $('#formcreate').submit();
            } else {
                return false;
            }
        }
    </script>
}
