@model List<UserRoleViewModel>

@{
    var countModel = @Model.Count();

    var roleId = ViewBag.roleId;
}

<form id="formEdit">
    <div class="card">
        <div class="card-header">
            <h2>Add or remove users from this role</h2>
        </div>
        <div class="card-body">
           
            @for (int i = 0; i < Model.Count; i++)
                {
                    <div class="form-check m-1">
                        <input type="hidden" id="Uid" value="@Model[i].UserId"/>
                        <input type="hidden" asp-for="@Model[i].UserId" />
                        <input type="hidden" asp-for="@Model[i].UserName" />
                        <input asp-for="@Model[i].IsSelected" class="form-check-input" />
                        <label class="form-check-label" asp-for="@Model[i].IsSelected">
                            @Model[i].UserName
                        </label>
                    </div>
                }
        </div>
        <div class="card-footer">
            <input type="button" id="SubmitBtn" value="Update" class="btn btn-primary"
                   style="width:auto" />
            <a asp-action="Index"
               class="btn btn-primary" style="width:auto">Cancel</a>
        </div>
    </div>
</form>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
<script>
    $(function () {
        $("#SubmitBtn").click(function () {
            SaveForm();
        //    $.ajax({
        //        type: "POST",
        //        url: "/CreateRole/EditUsersInRoles",
        //        method: "POST",
        //        data: $("#formEdit").serialize(),
        //        success: function () {
        //            alert("ok");
        //        },
        //        error: function () {
        //            alert("zzz");
        //        }
        //    })
        })
    })
    function getFormDataForm() {
        debugger;
        var formList = [];
        var lengthVal = '@countModel';
        var lengths = 0;
        if (lengthVal != '') {
            lengths = parseInt(lengthVal);
        }
        debugger;
        for (var i = 0; i < lengths; i++) {
            var formJson = {};
            
            var userid = $("#z" + i + "__UserId").val();
            var uname = $('#z' + i + "__UserName").val();
            var selected = $('#z' + i + "__IsSelected").is(":checked");

            //var isonline = $("#isonline" + i).is(":checked");
            //var chk = "N";
            //if (isonline) {
            //    chk = "Y";
            //}
            //var price = $('#PriceTxt' + i).val();
            formJson["UserId"] = userid;
            formJson["UserName"] = uname;
            formJson["isSelected"] = selected;
            //formJson["IS_ONLINE"] = chk;
            //formJson["PRICE"] = price;
            formList.push(formJson);
        }
        return JSON.stringify(formList);
    }
    function SaveForm() {
        debugger;
        var formTrans = getFormDataForm();
        var getReportColumnsParams = {
            "formTrans": formTrans,
            "roleid": '@roleId'
        };
        debugger;
        $.ajax({
            type: "POST",
            traditional: true,
            async: true,
            cache: false,
            url: '/CreateRole/SaveMultiData',
            context: document.body,
            data: getReportColumnsParams,
            success: function (result) {
                debugger;
                if (result == "ok") {
                    window.location = "/CreateRole/Index"

                } else {
                    alert(result);
                }
            },
            error: function (xhr) {
                //debugger;
                console.log(xhr.responseText);
                alert("Error has occurred..: " + xhr.responseText);
            }
        });
    }
</script>
}