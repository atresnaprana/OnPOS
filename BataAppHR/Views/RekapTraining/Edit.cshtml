@model BataAppHR.Models.dbrekapTrainingfixed
@using System.Text.Json;

@{

    var dateval = Model.passingDate;
    var HoursNumber = Model.Hours;
    var EDPvals = Model.EDP;
    var participantDt = Model.ParticipantList;
    var program = Model.Program;
    var trainerDatas = Model.TrainerList;
    var participantListData = JsonSerializer.Serialize(participantDt);
    var trainerListData = JsonSerializer.Serialize(trainerDatas);

    ViewData["Title"] = "Update";
}
<style>
    .disabled-select {
        background-color: #d5d5d5;
        opacity: 0.5;
        border-radius: 3px;
        cursor: not-allowed;
        position: absolute;
        top: 0;
        bottom: 0;
        right: 0;
        left: 0;
    }

    select[readonly].select2-hidden-accessible + .select2-container {
        pointer-events: none;
        touch-action: none;
    }

        select[readonly].select2-hidden-accessible + .select2-container .select2-selection {
            background: #eee;
            box-shadow: none;
        }

        select[readonly].select2-hidden-accessible + .select2-container .select2-selection__arrow,
        select[readonly].select2-hidden-accessible + .select2-container .select2-selection__clear {
            display: none;
        }
</style>
<h1>Update</h1>
<h3>Program Entry</h3>
<hr />
<form asp-action="Edits" method="post" id="formcreate">
    <div class="container">
        <div class="row">
            <div class="col-sm">
                <div class="form-group">
                    <label class="control-label">Type</label>
                    <br />
                    @Html.DropDownListFor(model => model.Type, new List<SelectListItem>
                                  {
                                      new SelectListItem{ Text="Head Office", Value = "Head Office" },
                                       new SelectListItem{ Text="Instore", Value = "Instore" },
                                       new SelectListItem{ Text="Online", Value = "Online" },
                                       new SelectListItem{ Text="Chatbased", Value = "Chatbased" },
                                       new SelectListItem{ Text="Inclass", Value = "Inclass" },
                                       new SelectListItem{ Text="Inhouse", Value = "Inhouse" },
                                       new SelectListItem{ Text="Others", Value = "Others" }
                                   }, new { @class = "form-control" })
                    <span asp-validation-for="Type" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Program" class="control-label"></label>
                    <input asp-for="id" type="hidden" class="form-control" />
                    <input asp-for="TRN_ID" type="hidden" class="form-control" />
                    @Html.DropDownListFor(m => m.Program, new SelectList(Model.ddProgram, "ProgramId", "ProgramName"), new { @class = "form-control" })
                    <span asp-validation-for="Program" class="text-danger"></span>
                </div>
                <div class="form-group" style="display;none;">
                    <label class="control-label">Detail</label>
                    <input asp-for="ProgramTxt" class="form-control" />
                    <span asp-validation-for="ProgramTxt" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <div class="container">
                        <div class="row">
                            <div class="col-sm">
                                <label class="control-label">Batch</label>
                                <input asp-for="Batch" class="form-control" type="number" />
                                <span asp-validation-for="Batch" class="text-danger"></span>
                            </div>
                            <div class="col-sm">
                                <label class="control-label">Training days</label>
                                <input asp-for="TrainingDays" class="form-control" type="number" min="1"/>
                                <span asp-validation-for="TrainingDays" class="text-danger"></span>
                            </div>

                        </div>
                    </div>

                </div>
                <div class="form-group" id="edpDiv">
                    <label class="control-label">EDP</label>
                    <br />
                    <table>
                        <tr>
                            <td>
                                @Html.DropDownListFor(m => m.EDP, new SelectList(Model.ddEdp, "edp", "store_location"), new { @class = "form-control" })
                                <span asp-validation-for="EDP" class="text-danger"></span>
                            </td>
                            <td>
                                <input type="button" value="Reset EDP" onclick="Clear()" class="btn btn-dark" />
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="form-group">
                    <label class="control-label">Date</label>
                    <input asp-for="Date" class="form-control" type="date" />
                    <span asp-validation-for="Date" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Periode" class="control-label"></label>
                    <br />
                    @Html.DropDownListFor(model => model.Periode, new List<SelectListItem>
                     {
                         new SelectListItem{ Text="January", Value = "January" },
                         new SelectListItem{ Text="February", Value = "February" },
                         new SelectListItem{ Text="March", Value = "March" },
                         new SelectListItem{ Text="April", Value = "April" },
                         new SelectListItem{ Text="May", Value = "May" },
                         new SelectListItem{ Text="June", Value = "June" },
                         new SelectListItem{ Text="July", Value = "July" },
                         new SelectListItem{ Text="August", Value = "August" },
                         new SelectListItem{ Text="September", Value = "September" },
                         new SelectListItem{ Text="October", Value = "October" },
                         new SelectListItem{ Text="November", Value = "November" },
                         new SelectListItem{ Text="December", Value = "December" },

                     })
                    <span asp-validation-for="Periode" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">Week</label>
                    <input asp-for="Week" class="form-control" onkeypress="return allowOnlyNumber(event);" readonly="readonly"/>
                    <span asp-validation-for="Week" class="text-danger"></span>
                </div>

            </div>
            <div class="col-sm">
                <div class="form-group">
                    <label class="control-label">Trainer</label>
                    <br />
                    @Html.DropDownListFor(m => m.TrainerList, new SelectList(Model.ddTrainer, "idTrainer", "NmTrainer"), new { @class = "form-control" })
                    <input asp-for="Trainer" type="hidden" class="form-control" />
                    <span asp-validation-for="TrainerList" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">Participant</label>
                    <br />
                    @Html.DropDownListFor(model => model.ParticipantList, new List<SelectListItem>
                              {
                                  new SelectListItem{ Text="AM", Value = "AM" },
                                  new SelectListItem{ Text="DM", Value = "DM" },
                                  new SelectListItem{ Text="RD", Value = "RD" },
                                  new SelectListItem{ Text="SALES STAFF", Value = "SS" },
                                  new SelectListItem{ Text="EMPLOYEE", Value = "EMP" },
                               }, new { @class = "form-control" })
                    <span asp-validation-for="Participant" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label class="control-label">No Participant</label>
                    <input asp-for="NoParticipant" class="form-control" readonly="readonly" />
                    <span asp-validation-for="NoParticipant" class="text-danger"></span>
                </div>
                <div class="form-group" style="display:none;">
                    <label class="control-label">Days</label>
                    <input asp-for="Days" class="form-control" onkeypress="return allowOnlyNumber(event);" />
                    <span asp-validation-for="Days" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">Hours</label>
                    <input asp-for="Hours" class="form-control" />
                    <span asp-validation-for="Hours" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">Total Hours</label>
                    <input asp-for="TotalHours" class="form-control" readonly="readonly" />
                    <span asp-validation-for="TotalHours" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <table>
                        <tr>
                            <td>
                                <a href="#/" onclick="openpopup(this,'')" id="addPeserta" class="btn btn-sm btn-dark">Tambah Peserta</a>
                            </td>
                            <td>
                                <a href="#/" onclick="openpopup(this,'')" id="UploadPeserta" class="btn btn-sm btn-dark">Upload Peserta</a>
                            </td>
                        </tr>
                    </table>
                    <br />
                    <table class="table table-striped" id="DtlTbl">
                        <thead>
                            <tr>
                                <th>Num.</th>
                                <th>
                                    SS Code
                                </th>
                                <th>
                                    Nama
                                </th>

                                <th>
                                    Nilai
                                </th>

                                <th>
                                    <label>Actions</label>
                                </th>
                            </tr>
                        </thead>
                        <tbody id="tbodyiddtl">
                        </tbody>
                    </table>
                </div>
                <div class="form-group">
                    <table>
                        <tr>
                            <td>
                                <input type="button" value="Simpan perubahan" onclick="alertfirst()" class="btn btn-red" />
                            </td>
                            <td>
                                <a asp-action="Index" class="btn btn-dark">Kembali ke List</a>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>

        </div>
    </div>


</form>

<div id="dialog" title="Data Peserta">
    <center>
        <form asp-action="AddDetailEdit" id="formdtl" enctype="multipart/form-data">
            <div class="container" style="width:100%;height:100%;">
                <div class="row">
                    <div class="form-group">
                        <table>
                            <tr>
                                <td>
                                    <label class="control-label">Type: </label>
                                </td>
                                <td style="padding-left:50%">
                                    @Html.DropDownListFor(model => model.EMP_TYPE, new List<SelectListItem>
                                                                  {
                                                                      new SelectListItem{ Text="AM", Value = "AM" },
                                                                      new SelectListItem{ Text="DM", Value = "DM" },
                                                                      new SelectListItem{ Text="RD", Value = "RD" },
                                                                      new SelectListItem{ Text="SALES STAFF", Value = "SS" },
                                                                      new SelectListItem{ Text="EMPLOYEE", Value = "EMP" },
                                                                   }, new { @class = "form-control" })
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <table>
                            <tr>
                                <td>
                                    <label class="control-label">Peserta: </label>
                                </td>
                                <td style="padding-left:18%">
                                    @Html.DropDownListFor(m => m.SS_CODE, new SelectList(Model.SSDD, "SS_CODE", "NAMA_SS"), new { @class = "form-control" })
                                    @Html.DropDownListFor(m => m.RD_CODE, new SelectList(Model.ddRD, "RD_CODE", "NM_RD"), new { @class = "form-control" })
                                    @Html.DropDownListFor(m => m.EMP_CODE, new SelectList(Model.ddEmp, "EMP_CODE", "NM_EMP"), new { @class = "form-control" })
                                    <input asp-for="TypeTemp" type="hidden" class="form-control" />
                                    <input asp-for="ProgramTemp" type="hidden" class="form-control" />
                                    <input asp-for="ProgramTxtTemp" type="hidden" class="form-control" />
                                    <input asp-for="EDPTemp" type="hidden" class="form-control" />
                                    <input asp-for="PeriodeTemp" class="form-control" type="hidden" />
                                    <input asp-for="WeekTemp" class="form-control" type="hidden" />
                                    <input asp-for="DateTemp" class="form-control" style="display:none;" />
                                    <input asp-for="idTrainerTemp" type="hidden" class="form-control" />
                                    <input asp-for="TrainerTemp" type="hidden" class="form-control" />
                                    <input asp-for="ParticipantTemp" type="hidden" class="form-control" />
                                    <input asp-for="NoParticipantTemp" type="hidden" class="form-control" />
                                    <input asp-for="DaysTemp" type="hidden" class="form-control" />
                                    <input asp-for="HoursTemp" type="hidden" class="form-control" />
                                    <input asp-for="TotalHoursTemp" type="hidden" class="form-control" />
                                    <input asp-for="idtemp" type="hidden" class="form-control" />
                                    <input asp-for="TRN_IDtemp" type="hidden" class="form-control" />
                                    <input asp-for="TrainingDaysTemp" type="hidden" class="form-control" />
                                    <input asp-for="BatchTemp" type="hidden" class="form-control" />
                                    @Html.DropDownListFor(model => model.ParticipantListTemp, new List<SelectListItem>
                                    {
                                        new SelectListItem{ Text="AM", Value = "AM" },
                                        new SelectListItem{ Text="DM", Value = "DM" },
                                        new SelectListItem{ Text="RD", Value = "RD" },
                                        new SelectListItem{ Text="SALES STAFF", Value = "SS" },
                                        new SelectListItem{ Text="EMPLOYEE", Value = "EMP" },
                                     }, new { @class = "form-control" })
                                    @Html.DropDownListFor(m => m.TrainerListTemp, new SelectList(Model.ddTrainer, "idTrainer", "NmTrainer"), new { @class = "form-control" })

                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <table>
                            <tr>
                                <td>
                                    <label class="control-label">Hadir: </label>
                                </td>
                                <td style="padding-left:50%">
                                    <input asp-for="isPresent" class="largerCheckbox" />
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <table>
                            <tr>
                                <td>
                                    <label class="control-label">Score: </label>
                                </td>
                                <td style="padding-left:20%">
                                    <input asp-for="NILAI" class="form-control" onkeypress="return allowOnlyNumber(event);" min="0" max="100" />
                                    <span asp-validation-for="NILAI" class="text-danger"></span>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <table>
                            <tr>
                                <td>
                                    <label class="control-label">Sertifikat: </label>
                                    <i style="font-size:smaller">
                                        Max Size: 4MB,
                                        file: JPG, JPEG, PNG
                                    </i>
                                </td>

                            </tr>
                            <tr>
                                <td style="padding-left:25%">
                                    <table>
                                        <tr>
                                            <td>
                                                <input asp-for="isCertified" class="largerCheckbox" />

                                            </td>
                                            <td align="center" style="padding-left:20px;">
                                                <input type="file" asp-for="fileSertifikat" />

                                            </td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                        </table>


                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <table>
                            <tr>
                                <td>
                                    <label class="control-label">No Sertifikat: </label>
                                </td>
                                <td>
                                    <input asp-for="NoSertifikat" class="form-control" />
                                    <span asp-validation-for="NoSertifikat" class="text-danger"></span>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group">
                        <input type="button" value="Tambah peserta" onclick="alertfirst2(this)" class="btn btn-red" />

                    </div>
                </div>
            </div>
        </form>
    </center>
</div>
<div id="dialogUpload" title="Upload Peserta">
    <center>
        <form asp-action="UploadPesertaEdit" id="formdtlupload" enctype="multipart/form-data">
            <div class="container" style="width:100%;height:100%;">
                <div class="row">
                    <div class="form-group">
                        <table>
                            <tr>
                                <td>
                                    <label class="control-label">Upload: </label>
                                </td>
                                <td style="padding-left:50%">
                                    <input type="file" asp-for="fileUploadPeserta" />
                                    @Html.DropDownListFor(model => model.ParticipantListTempUpl, new List<SelectListItem>
                                    {
                                        new SelectListItem{ Text="AM", Value = "AM" },
                                        new SelectListItem{ Text="DM", Value = "DM" },
                                        new SelectListItem{ Text="RD", Value = "RD" },
                                        new SelectListItem{ Text="SALES STAFF", Value = "SS" },
                                        new SelectListItem{ Text="EMPLOYEE", Value = "EMP" },
                                     }, new { @class = "form-control" })
                                    @Html.DropDownListFor(m => m.TrainerListTempUpl, new SelectList(Model.ddTrainer, "idTrainer", "NmTrainer"), new { @class = "form-control" })
                                    <input asp-for="TypeTempUpl" type="hidden" class="form-control" />
                                    <input asp-for="ProgramTempUpl" type="hidden" class="form-control" />
                                    <input asp-for="ProgramTxtTempUpl" type="hidden" class="form-control" />
                                    <input asp-for="EDPTempUpl" type="hidden" class="form-control" />
                                    <input asp-for="PeriodeTempUpl" class="form-control" type="hidden" />
                                    <input asp-for="WeekTempUpl" class="form-control" type="hidden" />
                                    <input asp-for="DateTempUpl" class="form-control" style="display:none;" />
                                    <input asp-for="idTrainerTempUpl" type="hidden" class="form-control" />
                                    <input asp-for="TrainerTempUpl" type="hidden" class="form-control" />
                                    <input asp-for="ParticipantTempUpl" type="hidden" class="form-control" />
                                    <input asp-for="NoParticipantTempUpl" type="hidden" class="form-control" />
                                    <input asp-for="DaysTempUpl" type="hidden" class="form-control" />
                                    <input asp-for="HoursTempUpl" type="hidden" class="form-control" />
                                    <input asp-for="TotalHoursTempUpl" type="hidden" class="form-control" />
                                    <input asp-for="TrainingDaysTempUpl" type="hidden" class="form-control" />
                                    <input asp-for="idtempUpl" type="hidden" class="form-control" />

                                    <input asp-for="TRN_IDtempUpl" type="hidden" class="form-control" />
                                    <input asp-for="BatchTempUpl" type="hidden" class="form-control" />
                                    <br />
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <input type="button" value="Upload peserta" onclick="alertfirstupl(this)" class="btn btn-red" />

                    </div>
                </div>
            </div>
        </form>
    </center>
</div>
<div id="dialogEdit" title="Data Peserta">
    <center>
        <form asp-action="EditDetailEdit" id="formdtlEdit" enctype="multipart/form-data">
            <div class="container" style="width:100%;height:100%;">
                <div class="row">
                    <div class="form-group">
                        <table>
                            <tr>
                                <td>
                                    <label class="control-label">Type: </label>
                                </td>
                                <td style="padding-left:50%">
                                    @Html.DropDownListFor(model => model.EMP_TYPE_EDIT, new List<SelectListItem>
                                                                  {
                                                                      new SelectListItem{ Text="AM", Value = "AM" },
                                                                      new SelectListItem{ Text="DM", Value = "DM" },
                                                                      new SelectListItem{ Text="RD", Value = "RD" },
                                                                      new SelectListItem{ Text="SALES STAFF", Value = "SS" },
                                                                      new SelectListItem{ Text="EMPLOYEE", Value = "EMP" },
                                                                   }, new { @class = "form-control" })
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <table>
                            <tr>
                                <td>
                                    <label class="control-label">Peserta: </label>
                                </td>
                                <td style="padding-left:18%">
                                    @Html.DropDownListFor(m => m.SS_CODE_EDIT, new SelectList(Model.SSDD, "SS_CODE", "NAMA_SS"), new { @class = "form-control" })
                                    @Html.DropDownListFor(m => m.RD_CODE_EDIT, new SelectList(Model.ddRD, "RD_CODE", "NM_RD"), new { @class = "form-control" })
                                    @Html.DropDownListFor(m => m.EMP_CODE_EDIT, new SelectList(Model.ddEmp, "EMP_CODE", "NM_EMP"), new { @class = "form-control" })
                                    <input asp-for="TypeTemp_EDIT" type="hidden" class="form-control" />
                                    <input asp-for="ProgramTemp_EDIT" type="hidden" class="form-control" />
                                    <input asp-for="ProgramTxtTemp_EDIT" type="hidden" class="form-control" />
                                    <input asp-for="EDPTemp_EDIT" type="hidden" class="form-control" />
                                    <input asp-for="PeriodeTemp_EDIT" class="form-control" type="hidden" />
                                    <input asp-for="WeekTemp_EDIT" class="form-control" type="hidden" />
                                    <input asp-for="DateTemp_EDIT" class="form-control" style="display:none;" />
                                    <input asp-for="idTrainerTemp_EDIT" type="hidden" class="form-control" />
                                    <input asp-for="TrainerTemp_EDIT" type="hidden" class="form-control" />
                                    <input asp-for="ParticipantTemp_EDIT" type="hidden" class="form-control" />
                                    <input asp-for="NoParticipantTemp_EDIT" type="hidden" class="form-control" />
                                    <input asp-for="DaysTemp_EDIT" type="hidden" class="form-control" />
                                    <input asp-for="HoursTemp_EDIT" type="hidden" class="form-control" />
                                    <input asp-for="TotalHoursTemp_EDIT" type="hidden" class="form-control" />
                                    <input asp-for="datamode" type="hidden" class="form-control" />
                                    <input asp-for="idtemp_EDIT" type="hidden" class="form-control" />
                                    <input asp-for="TRN_IDtemp_EDIT" type="hidden" class="form-control" />
                                    <input asp-for="ScoreId" type="hidden" class="form-control" />
                                    <input asp-for="TrainingDaysTemp_EDIT" type="hidden" class="form-control" />
                                    <input asp-for="BatchTemp_EDIT" type="hidden" class="form-control" />
                                    @Html.DropDownListFor(model => model.ParticipantListTemp_EDIT, new List<SelectListItem>
                                    {
                                        new SelectListItem{ Text="AM", Value = "AM" },
                                        new SelectListItem{ Text="DM", Value = "DM" },
                                        new SelectListItem{ Text="RD", Value = "RD" },
                                        new SelectListItem{ Text="SALES STAFF", Value = "SS" },
                                        new SelectListItem{ Text="EMPLOYEE", Value = "EMP" },
                                     }, new { @class = "form-control" })
                                    @Html.DropDownListFor(m => m.TrainerListTemp_EDIT, new SelectList(Model.ddTrainer, "idTrainer", "NmTrainer"), new { @class = "form-control" })
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <table>
                            <tr>
                                <td>
                                    <label class="control-label">Hadir: </label>
                                </td>
                                <td style="padding-left:50%">
                                    <input asp-for="isPresent_EDIT" class="largerCheckbox" />
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <table>
                            <tr>
                                <td>
                                    <label class="control-label">Score: </label>
                                </td>
                                <td style="padding-left:20%">
                                    <input asp-for="NILAI_EDIT" class="form-control" onkeypress="return allowOnlyNumber(event);" min="0" max="100" />
                                    <span asp-validation-for="NILAI_EDIT" class="text-danger"></span>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <table>
                            <tr>
                                <td>
                                    <label class="control-label">Sertifikat: </label>
                                    <i style="font-size:smaller">
                                        Max Size: 4MB,
                                        file: JPG, JPEG, PNG
                                    </i>
                                </td>

                            </tr>
                            <tr>
                                <td style="padding-left:25%">
                                    <table>
                                        <tr>
                                            <td>
                                                <input asp-for="isCertified_EDIT" class="largerCheckbox" />

                                            </td>
                                            <td align="center" style="padding-left:20px;">
                                                <input type="file" asp-for="fileSertifikat_EDIT" />
                                                <br />
                                                <a href="#" id="fileNameSertifikat"></a>

                                            </td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                        </table>


                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <table>
                            <tr>
                                <td>
                                    <label class="control-label">No Sertifikat: </label>
                                </td>
                                <td>
                                    <input asp-for="NoSertifikat_EDIT" class="form-control" />
                                    <span asp-validation-for="NoSertifikat_EDIT" class="text-danger"></span>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>


                <div class="row">
                    <div class="form-group">
                        <input type="button" id="btnPopupMod" value="Simpan data" onclick="alertfirst3(this)" class="btn btn-red" />

                    </div>
                </div>
            </div>
        </form>
    </center>
</div>


@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js" integrity="sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
        window.lastclicked = "";
        var datevals = '@dateval';
        var dtltbls;
    $(document).ready(function () {
        console.log("ready!");
        $("#Hours").rules("remove", "number");
        $("#TotalHours").rules("remove", "number");
        dtltbls = $('#DtlTbl').DataTable({
            "iDisplayLength": 25,
            'columnDefs': [
                {
                    "targets": 0, // your case first column
                    "className": "text-center",
                },
                {
                    "targets": 1,
                    "className": "text-center",
                },
                {
                    "targets": 2,
                    "className": "text-center",
                },
                {
                    "targets": 3,
                    "className": "text-center",
                },
                {
                    "targets": 4,
                    "className": "text-center",
                }
            ]
        });
        $("#NILAI").prop("disabled", true);
        $("#isCertified").prop("disabled", true);
        $("#fileSertifikat").prop("disabled", true);
        $("#NoSertifikat").prop("disabled", true);
        $("#Periode").select2({
            placeholder: "Select Date to show periode",
            initSelection: function (element, callback) {
            },
            dropdownAutoWidth: true,
            width: 'auto',
            disabled: 'readonly'
        });
        if (dateval != '' && dateval != 'null') {
            //var convertdate = formatDate(dateval);
            debugger;
            $("#Date").val(moment(datevals).format("YYYY-MM-DD"))
            var currentdate = new Date(datevals);
            var wk = currentdate.getWeek() + 1;
            //var oneJan = new Date(currentdate.getFullYear(), 0, 1);
            //var wk = Math.ceil((((currentdate - oneJan) / 86400000) + oneJan.getDay() + 1) / 7);
            $('#Week').val(wk);
            $("#WeekTemp").val(wk);
            $("#WeekTempUpl").val(wk);
            $("#WeekTemp_EDIT").val(wk);
            var month = "";
            switch (currentdate.getMonth()) {
                case 0:
                    month = "January";
                    break;
                case 1:
                    month = "February";
                    break;
                case 2:
                    month = "March";
                    break;
                case 3:
                    month = "April";
                    break;
                case 4:
                    month = "May";
                    break;
                case 5:
                    month = "June";
                    break;
                case 6:
                    month = "July";
                    break;
                case 7:
                    month = "August";
                    break
                case 8:
                    month = "September";
                    break;
                case 9:
                    month = "October";
                    break;
                case 10:
                    month = "November";
                    break;
                case 11:
                    month = "December";
                    break;
            }
            $("#Periode").val(month);
            $("#Periode").trigger('change');
            $("#PeriodeTemp").val(month);
            $("#PeriodeTempUpl").val(month);
            $("#PeriodeTemp_EDIT").val(month);
        }

        var idval = $("#id").val();
        var trnidval = $("#TRN_ID").val();
        $("#idtemp").val(idval);
        $("#idtempUpl").val(idval);
        $("#idtemp_EDIT").val(idval);
        $("#TRN_IDtemp").val(trnidval);
        $("#TRN_IDtempUpl").val(trnidval);
        $("#TRN_IDtemp_EDIT").val(trnidval);

        $.ajax({
            url: '@Url.Action("getTblDtlEdit", "RekapTraining")',
                type: "GET",
                //data: { id: value, sscode: value2 },
                //startDate: mFromDate, endDate: mToDate1
                dataType: 'json',
                success: function (data) {
                    $("#NoParticipant").val(data.length);
                    $("#NoParticipantTemp").val(data.length);
                    $("#NoParticipantTempUpl").val(data.length);
                    $("#NoParticipantTemp_EDIT").val(data.length);
                    var noparticipant = $("#NoParticipant").val();
                    debugger;
                    var totalval = parseFloat(hoursval.replace(',', '.')).toFixed(2) * parseFloat(noparticipant.replace(',', '.')).toFixed(2);
                    //$("#TotalHours").val(String(totalval).replace('.', ','));
                    //$("#TotalHoursTemp").val(String(totalval).replace('.', ','));
                    //$("#TotalHoursTempUpl").val(String(totalval).replace('.', ','));
                    //$("#TotalHoursTemp_EDIT").val(String(totalval).replace('.', ','));
                    $("#TotalHours").val(String(totalval));
                    $("#TotalHoursTemp").val(String(totalval));
                    $("#TotalHoursTempUpl").val(String(totalval));
                    $("#TotalHoursTemp_EDIT").val(String(totalval));
            
                    if (data.length != 0) {
                        debugger;
                        //$("#tbodyiddtl").empty();
                        dtltbls.clear();

                        //var tr;
                        ////Append each row to html table
                        //for (var i = 0; i < data.length; i++) {
                        //    debugger;
                        //    var number = parseInt(i) + 1;
                        //    tr = $('<tr/>');
                        //    tr.append("<td>" + number + "</td>");
                        //    tr.append("<td>" + data[i].sS_CODE + "</td>");
                        //    tr.append("<td>" + data[i].namA_SS + "</td>");
                        //    tr.append("<td>" + data[i].nilai + "</td>");
                        //    //if (data[i].vaksiN1 == "1") {
                        //    //    tr.append("<td><input type='checkbox' name='vaksin1' checked disabled></td>");
                        //    //} else {
                        //    //    tr.append("<td><input type='checkbox' name='vaksin1' disabled></td>");
                        //    //}
                        //    //if (data[i].vaksiN2 == "1") {
                        //    //    tr.append("<td><input type='checkbox' name='vaksin2' checked disabled></td>");
                        //    //} else {
                        //    //    tr.append("<td><input type='checkbox' name='vaksin2' disabled></td>");
                        //    //}
                        //    //tr.append("<td>" + data[i].vaksiN2 + "</td>");
                        //    tr.append("<td><a onclick=\"openpopup(this, \'" + data[i].sS_CODE + "\');\" id='EditPeserta" + number + "' class='btn btn-sm btn-dark'>Edit</a>&nbsp;<a onclick=\"openpopup(this, \'" + data[i].sS_CODE + "\');\" id='DeletePeserta" + number + "' class='btn btn-sm btn-dark'>Delete</a ></td>");
                        //    debugger;
                        //    //tr.append('<td><a href="#/" onclick=\"openpopup(\'" + data[i].fotosertifikaT1 + "\', \'" + data[i].fotosertifikaT2 + "\');\" id="addPeserta" class="btn btn-sm btn-dark">Edit</a >&nbsp;<a href="/FormVaksin/Delete/' + data[i].id + '" class="btn btn-sm btn-dark">Delete</a ></td>');

                        //    //tr.append('<button type="button" asp-action="Edit" asp-route-id="' + data[i].id + '" class="btn btn-primary";">Delete</button>');
                        //    //tr.append("")
                        //    //tr.append("<a asp-action='Edit' asp-route-id='" + data[i].id + "' class='btn btn - primary'>Edit</a>");
                        //    //tr.append("<a asp-action='Delete' asp-route-id='" + data[i].id + "' class='btn btn - primary'>Delete</a>");
                        //    //tr.append("");

                        //    $('#DtlTbl').append(tr);
                        //    /* location.reload();*/
                        //}
                        var x = 1;
                        data.forEach(function (item) { //insert rows
                            var btnList = "<a onclick=\"openpopup(this, \'" + item.sS_CODE + "\');\" id='EditPeserta" + x + "' class='btn btn-sm btn-dark'>Edit</a>&nbsp;<a onclick=\"openpopup(this, \'" + item.sS_CODE + "\');\" id='DeletePeserta" + x + "' class='btn btn-sm btn-dark'>Delete</a >";
                            dtltbls.row.add([x, item.sS_CODE, item.namA_SS, item.nilai, btnList]);
                            x++
                        })
                        dtltbls.draw();
                    }

                },
                error: function () {

                }
        });
        $("#dialogUpload").dialog({
            width: 450,
            height: 410,
            modal: true,
            resizable: false,
            close: function () {
                //var audio = $("#player");
                //audio[0].pause();
            }
        });
        $("#dialogUpload").dialog("close");
        $("#dialog").dialog({
            width: 450,
            height: 410,
            modal: true,
            resizable: false,
            close: function () {
                //var audio = $("#player");
                //audio[0].pause();
            }
        });
        $("#dialog").dialog("close");
        $("#dialogEdit").dialog({
            width: 450,
            height: 410,
            modal: true,
            resizable: false,
            close: function () {
                //var audio = $("#player");
                //audio[0].pause();
            }
        });
        $("#dialogEdit").dialog("close");
     
        $("#EDP").select2({
            placeholder: "Select Edp Code",
            initSelection: function (element, callback) {
            },
            dropdownAutoWidth: true,
            width: 'auto'
        });
        $("#Program").select2({
            placeholder: "Select Program",
            initSelection: function (element, callback) {
            },
            dropdownAutoWidth: true,
            width: 'element'
        });
            $("#ParticipantList").select2({
            placeholder: "Select Participant",
            multiple: true,
            initSelection: function (element, callback) {
            },
            dropdownAutoWidth: true,
            width: 'auto'
        });

        var participantData = JSON.parse('@Html.Raw(participantListData)');
        debugger;
        $("#ParticipantList").val(null);
        $("#ParticipantList").trigger('change');
        $("#ParticipantList").val(participantData).trigger('change');


        debugger;
        $("#ParticipantListTemp").select2({
            placeholder: "Select Participant",
            multiple: true,
            initSelection: function (element, callback) {
            },
            dropdownAutoWidth: true,
            width: 'auto'
        });
        $("#ParticipantListTemp").val(null);
        $("#ParticipantListTemp").trigger('change');
        $("#ParticipantListTemp").val(participantData).trigger('change');

        $("#ParticipantListTempUpl").select2({
            placeholder: "Select Participant",
            multiple: true,
            initSelection: function (element, callback) {
            },
            dropdownAutoWidth: true,
            width: 'auto'
        });
        $("#ParticipantListTempUpl").val(null);
        $("#ParticipantListTempUpl").trigger('change');
        $("#ParticipantListTempUpl").val(participantData).trigger('change');

        $("#TrainerList").select2({
            placeholder: "Select Trainer Code",
            multiple: true,
            initSelection: function (element, callback) {
            },
            dropdownAutoWidth: true,
            width: 'auto'
        });
         var trainerData = JSON.parse('@Html.Raw(trainerListData)');
        $("#TrainerList").val(null);
        $("#TrainerList").trigger('change');
        $("#TrainerList").val(trainerData).trigger('change');

        $("#TrainerListTemp").select2({
            placeholder: "Select Trainer Code",
            multiple: true,
            initSelection: function (element, callback) {
            },
            dropdownAutoWidth: true,
            width: 'auto'
        });
        $("#TrainerListTemp").val(null);
        $("#TrainerListTemp").trigger('change');
        $("#TrainerListTemp").val(trainerData).trigger('change');

        $("#TrainerListTempUpl").select2({
            placeholder: "Select Participant",
            multiple: true,
            initSelection: function (element, callback) {
            },
            dropdownAutoWidth: true,
            width: 'auto'
        });
        $("#TrainerListTempUpl").val(null);
        $("#TrainerListTempUpl").trigger('change');
        $("#TrainerListTempUpl").val(trainerData).trigger('change');

        $("#TrainerListTemp_EDIT").select2({
            placeholder: "Select Trainer Code",
            multiple: true,
            initSelection: function (element, callback) {
            },
            dropdownAutoWidth: true,
            width: 'auto'
        });
        $("#TrainerListTemp_EDIT").val(null);
        $("#TrainerListTemp_EDIT").trigger('change');
        $("#TrainerListTemp_EDIT").val(trainerData).trigger('change');

        $("#SS_CODE").select2({
            placeholder: "Select SS Code",
            initSelection: function (element, callback) {
            },
            dropdownAutoWidth: true,
            width: 'auto'
        });
        $("#SS_CODE").val(null);
        $("#SS_CODE").trigger('change');
        $("#EMP_TYPE").select2({
            placeholder: "Select Type",
            initSelection: function (element, callback) {
            },
            dropdownAutoWidth: true,
            width: 'element'
        });
        $("#EMP_TYPE").val(null);
        $("#EMP_TYPE").trigger('change');
        $("#RD_CODE").select2({
            placeholder: "Select RD Code",
            initSelection: function (element, callback) {
            },
            dropdownAutoWidth: true,
            width: 'element'
        });
        $("#RD_CODE").val(null);
        $("#RD_CODE").trigger('change');

        $("#EMP_CODE").select2({
            placeholder: "Select EMP Code",
            initSelection: function (element, callback) {
            },
            dropdownAutoWidth: true,
            width: 'element'
        });
        $("#EMP_CODE").val(null);
        $("#EMP_CODE").trigger('change');
        $("#SS_CODE_EDIT").select2({
            placeholder: "Select SS Code",
            initSelection: function (element, callback) {
            },
            dropdownAutoWidth: true,
            width: 'auto'
        });
        $("#SS_CODE_EDIT").val(null);
        $("#SS_CODE_EDIT").trigger('change');
        $("#EMP_TYPE_EDIT").select2({
            placeholder: "Select Type",
            initSelection: function (element, callback) {
            },
            dropdownAutoWidth: true,
            width: 'element'
        });
        $("#EMP_TYPE_EDIT").val(null);
        $("#EMP_TYPE_EDIT").trigger('change');
        $("#RD_CODE_EDIT").select2({
            placeholder: "Select RD Code",
            initSelection: function (element, callback) {
            },
            dropdownAutoWidth: true,
            width: 'element'
        });
        $("#RD_CODE_EDIT").val(null);
        $("#RD_CODE_EDIT").trigger('change');

        $("#EMP_CODE_EDIT").select2({
            placeholder: "Select Emp Code",
            initSelection: function (element, callback) {
            },
            dropdownAutoWidth: true,
            width: 'element'
        });
        $("#EMP_CODE_EDIT").val(null);
        $("#EMP_CODE_EDIT").trigger('change');
        $("#ParticipantListTemp_EDIT").select2({
            placeholder: "Select Participant",
            multiple: true,
            initSelection: function (element, callback) {
            },
            dropdownAutoWidth: true,
            width: 'auto'
        });
        $("#ParticipantListTemp_EDIT").val(null);
        $("#ParticipantListTemp_EDIT").trigger('change');
        $("#ParticipantListTemp_EDIT").val(participantData).trigger('change');
        var valueType = $("#Type").val();
        if (valueType == "Instore") {
            $("#edpDiv").show();
        } else {
            $("#edpDiv").hide();
            var EDPval = '@EDPvals';
            if (EDPval != '' && EDPval != "null") {
                $("#EDP").val(EDPval);
                $("#EDP").trigger('change');
            } else {
                Clear();
            }
        }
        var typeVal = $("#Type").val();
        $("#TypeTemp").val(typeVal);
        $("#TypeTempUpl").val(typeVal);
        $("#TypeTemp_EDIT").val(typeVal);

        var programval = $("#Program").val();
        $("#ProgramTemp").val(programval);
        $("#ProgramTempUpl").val(programval);
        $("#ProgramTemp_EDIT").val(programval);

        var programdtlval = $("#ProgramTxt").val();
        $("#ProgramTxtTemp").val(programdtlval);
        $("#ProgramTxtTempUpl").val(programdtlval);
        $("#ProgramTxtTemp_EDIT").val(programdtlval);

        var batchval = $("#Batch").val();
        $("#BatchTemp").val(batchval);
        $("#BatchTempUpl").val(batchval);
        $("#BatchTemp_EDIT").val(batchval);


        var trainingdaysval = $("#TrainingDays").val();
        if (trainingdaysval == 0 || trainingdaysval == "0") {
            $("#TrainingDays").val(1);
        }
        $("#TrainingDaysTemp").val(trainingdaysval);
        $("#TrainingDaysTempUpl").val(trainingdaysval);
        $("#TrainingDaysTemp_EDIT").val(trainingdaysval);
        var edpVal = $("#EDP").val();

        @*if (edpVal != '' && edpVal != null) {
            debugger;
             $('#SS_CODE').select2('data', null);
        $('#SS_CODE_EDIT').select2('data', null);
        $.ajax({
            type: "GET",
            url: "/RekapTraining/getdataSS",
            data: { edp: edpVal },
            success: function (data) {
                debugger;
                var s = '';
                for (var i = 0; i < data.length; i++) {
                    s += '<option value="' + data[i].sS_CODE + '">' + data[i].namA_SS + '</option>';
                }
                $("#SS_CODE").html(s);
                $('#SS_CODE_EDIT').html(s);
                //$("#SSList").select2({ placeholder: "Select SS" });
                $("#SS_CODE").val(null);
                $("#SS_CODE").trigger('change');
                $("#SS_CODE_EDIT").val(null);
                $("#SS_CODE_EDIT").trigger('change');

            }
        });
        $.ajax({
            url: '@Url.Action("getTblDtlbyEDPEdit", "RekapTraining")',
            type: "GET",
            data: { edpcode: edpVal},
                //startDate: mFromDate, endDate: mToDate1
                dataType: 'json',
                success: function (data) {
                    $("#NoParticipant").val(data.length);
                    $("#NoParticipantTemp").val(data.length);
                    $("#NoParticipantTemp_EDIT").val(data.length);
                    $("#tbodyiddtl").empty();
                    if (data.length != 0) {
                        debugger;
                        var tr;
                        //Append each row to html table
                        for (var i = 0; i < data.length; i++) {
                            debugger;
                            var number = parseInt(i) + 1;
                            tr = $('<tr/>');
                            tr.append("<td>" + number + "</td>");
                            tr.append("<td>" + data[i].sS_CODE + "</td>");
                            tr.append("<td>" + data[i].namA_SS + "</td>");
                            tr.append("<td>" + data[i].nilai + "</td>");
                            tr.append("<td><a onclick=\"openpopup(this, \'" + data[i].sS_CODE + "\');\" id='EditPeserta" + number + "' class='btn btn-sm btn-dark'>Edit</a>&nbsp;<a onclick=\"openpopup(this, \'" + data[i].sS_CODE + "\');\" id='DeletePeserta" + number + "' class='btn btn-sm btn-dark'>Delete</a ></td>");
                            $('#DtlTbl').append(tr);
                        }
                    }

                },
                error: function () {

                }
        });
        }*@
        $("#EDPTemp").val(edpVal);
        $("#EDPTempUpl").val(edpVal);

        $("#EDPTemp_EDIT").val(edpVal);

        //var periodeVal = $("#Periode").val();
        //$("#PeriodeTemp").val(periodeVal);
        //$("#PeriodeTemp_EDIT").val(periodeVal);

        //var weekval = $("#Week").val();
        //$("#WeekTemp").val(weekval);
        //$("#WeekTemp_EDIT").val(weekval);

        var dateval = $("#Date").val();
        $("#DateTemp").val(dateval);
        $("#DateTempUpl").val(dateval);
        $("#DateTemp_EDIT").val(dateval);

        var trainerval = $("#TrainerList").val();
        var trainerdata = $("#TrainerList").select2('data')
        $("#Trainer").val(trainerdata[0].text);
        $("#TrainerTemp").val(trainerdata[0].text);
        $("#TrainerTempUpl").val(trainerdata[0].text);
        $("#TrainerTemp_EDIT").val(trainerdata[0].text);
        $("#idTrainerTemp").val(trainerval);
        $("#idTrainerTempUpl").val(trainerval);
        $("#idTrainerTemp_EDIT").val(trainerval);

        var participantVal = $("#Participant").val();
        $("#ParticipantTemp").val(participantVal);
        $("#ParticipantTempUpl").val(participantVal);
        $("#ParticipantTemp_EDIT").val(participantVal);

        var daysval = $("#Days").val();
        $("#DaysTemp").val(daysval);
        $("#DaysTempUpl").val(daysval);

        $("#DaysTemp_EDIT").val(daysval);
        var hoursval = $("#Hours").val();
        //hoursval = hoursval.replace(".", ",")
        hoursval = hoursval.replace(",", ".")

        $("#Hours").val(hoursval);
        $("#HoursTemp").val(hoursval);
        $("#HoursTempUpl").val(hoursval);
        $("#HoursTemp_EDIT").val(hoursval);
        //var totalhoursval = $("#TotalHours").val();
        //$("#TotalHoursTemp").val(totalhoursval);
        //$("#TotalHoursTemp_EDIT").val(totalhoursval);
        $("#SS_CODE").next(".select2-container").hide();
        $("#SS_CODE_EDIT").next(".select2-container").hide();
        $("#RD_CODE").next(".select2-container").hide();
        $("#RD_CODE_EDIT").next(".select2-container").hide();
        $("#EMP_CODE").next(".select2-container").hide();
        $("#EMP_CODE_EDIT").next(".select2-container").hide();

        $("#ParticipantListTemp").next(".select2-container").hide();
        $("#ParticipantListTempUpl").next(".select2-container").hide();
        $("#ParticipantListTemp_EDIT").next(".select2-container").hide();
        $("#TrainerListTemp").next(".select2-container").hide();
        $("#TrainerListTempUpl").next(".select2-container").hide();
        $("#TrainerListTemp_EDIT").next(".select2-container").hide();
        
    });
    function formatDate(date) {
    var d = new Date(date),
        month = '' + (d.getMonth() + 1),
        day = '' + d.getDate(),
        year = d.getFullYear();

    if (month.length < 2)
        month = '0' + month;
    if (day.length < 2)
        day = '0' + day;

    return [day, month, year].join('-');
        }
        $("#isPresent").change(function () {
            if (this.checked) {
                $("#NILAI").prop("disabled", false);
                $("#isCertified").prop("disabled", false);
                $("#fileSertifikat").prop("disabled", false);
                $("#NoSertifikat").prop("disabled", false);
            } else {
                $("#NILAI").prop("disabled", true);
                $("#isCertified").prop("disabled", true);
                $("#fileSertifikat").prop("disabled", true);
                $("#NoSertifikat").prop("disabled", true);
            }
        });
        $("#isPresent_EDIT").change(function () {
            if (this.checked) {
                $("#NILAI_EDIT").prop("disabled", false);
                $("#isCertified_EDIT").prop("disabled", false);
                $("#fileSertifikat_EDIT").prop("disabled", false);
                $("#NoSertifikat_EDIT").prop("disabled", false);
            } else {
                $("#NILAI_EDIT").prop("disabled", true);
                $("#isCertified_EDIT").prop("disabled", true);
                $("#fileSertifikat_EDIT").prop("disabled", true);
                $("#NoSertifikat_EDIT").prop("disabled", true);
            }
        });
        $('#EMP_TYPE').on('change', function () {
            var value = $("#EMP_TYPE").val();
            if (value == "AM" || value == "DM" || value == "EMP") {
                $("#SS_CODE").next(".select2-container").hide();
                $("#RD_CODE").next(".select2-container").hide();
                $("#EMP_CODE").next(".select2-container").show();
            } else if (value == "RD") {
                $("#SS_CODE").next(".select2-container").hide();
                $("#RD_CODE").next(".select2-container").show();
                $("#EMP_CODE").next(".select2-container").hide();
            } else if (value == "SS") {
                $("#SS_CODE").next(".select2-container").show();
                $("#RD_CODE").next(".select2-container").hide();
                $("#EMP_CODE").next(".select2-container").hide();
            }
        });
    $('#Type').on('change', function () {
        var value = $("#Type").val();
        $("#TypeTemp").val(value);
        $("#TypeTempUpl").val(value);
        $("#TypeTemp_EDIT").val(value);
        if (value == "Instore") {
            $("#edpDiv").show();
        } else {
            $("#edpDiv").hide();
            var EDPval = '@EDPvals';
            if (EDPVal != '' && EDPval != "null") {
                $("#EDP").val(EDPval);
                $("#EDP").trigger('change');
            } else {
                Clear();
            }
        }
    });
        $('#Batch').on('change', function () {
            var value = $("#Batch").val();
            $("#BatchTemp").val(value);
            $("#BatchTempUpl").val(value);
            $("#BatchTemp_EDIT").val(value);
        });
        $('#TrainingDays').on('change', function () {
            var value = $("#TrainingDays").val();
            $("#TrainingDaysTemp").val(value);
            $("#TrainingDaysTempUpl").val(value);
            $("#TrainingDaysTemp_EDIT").val(value);
        });
    $('#Program').on('change', function () {
        var value = $("#Program").val();
        $("#ProgramTemp").val(value);
        $("#ProgramTempUpl").val(value);
        $("#ProgramTemp_EDIT").val(value);
    });
        $('#ParticipantList').on('change', function () {
            var value = $("#ParticipantList").val();
            $("#ParticipantListTemp").val($("#ParticipantList").val()).trigger('change');
            $("#ParticipantListTempUpl").val($("#ParticipantList").val()).trigger('change');
            $("#ParticipantListTemp_EDIT").val($("#ParticipantList").val()).trigger('change');
            //$("#ParticipantTemp").val(value);
            //$("#ParticipantTemp_EDIT").val(value);

        });
    $('#SS_CODE').on('change', function () {
        var value = $("#SS_CODE").val();
        //if (lastclickedbtn == "addPeserta") {

        //}
        var lastclickedbtn = window.lastclicked;
        var getValidate = function () {
            var tmp = null;
            $.ajax({
                'async': false,
                'type': "POST",
                'global': false,
                'dataType': 'html',
                'url': "/RekapTraining/validatesscodeEdit",
                'data': { 'request': "", 'target': 'arrange_url', 'method': 'method_target', 'sscode': value, 'btnid': lastclickedbtn },
                'success': function (data) {
                    tmp = data;
                }
            });
            return tmp;
        }();
        debugger;
        if (getValidate == '"nopass"') {
            alert("Peserta sudah di daftarkan");
            $("#SS_CODE").val(null);
            $("#SS_CODE").trigger('change');
        }

    });
        $('#RD_CODE').on('change', function () {
            var value = $("#RD_CODE").val();
            //if (lastclickedbtn == "addPeserta") {

            //}
            var lastclickedbtn = window.lastclicked;
            var getValidate = function () {
                var tmp = null;
                $.ajax({
                    'async': false,
                    'type': "POST",
                    'global': false,
                    'dataType': 'html',
                    'url': "/RekapTraining/validatesscodeEdit",
                    'data': { 'request': "", 'target': 'arrange_url', 'method': 'method_target', 'sscode': value, 'btnid': lastclickedbtn },
                    'success': function (data) {
                        tmp = data;
                    }
                });
                return tmp;
            }();
            debugger;
            if (getValidate == '"nopass"') {
                alert("Peserta sudah di daftarkan");
                $("#RD_CODE").val(null);
                $("#RD_CODE").trigger('change');
            }

        });
    $('#EMP_CODE').on('change', function () {
            var value = $("#EMP_CODE").val();
            //if (lastclickedbtn == "addPeserta") {

            //}
            var lastclickedbtn = window.lastclicked;
            var getValidate = function () {
                var tmp = null;
                $.ajax({
                    'async': false,
                    'type': "POST",
                    'global': false,
                    'dataType': 'html',
                    'url': "/RekapTraining/validatesscodeEdit",
                    'data': { 'request': "", 'target': 'arrange_url', 'method': 'method_target', 'sscode': value, 'btnid': lastclickedbtn },
                    'success': function (data) {
                        tmp = data;
                    }
                });
                return tmp;
            }();
            debugger;
            if (getValidate == '"nopass"') {
                alert("Peserta sudah di daftarkan");
                $("#EMP_CODE").val(null);
                $("#EMP_CODE").trigger('change');
            }

        });
    $('#ProgramTxt').on('change', function () {
        var value = $("#ProgramTxt").val();
        $("#ProgramTxtTemp").val(value);
        $("#ProgramTxtTempUpl").val(value);
        $("#ProgramTxtTemp_EDIT").val(value);

    });
    $('#EDP').on('change', function () {
        var value = $("#EDP").val();
        $("#EDPTemp").val(value);
        $("#EDPTempUpl").val(value);
        $("#EDPTemp_EDIT").val(value);
          @*$('#SS_CODE').select2('data', null);
        $('#SS_CODE_EDIT').select2('data', null);
        $.ajax({
            type: "GET",
            url: "/RekapTraining/getdataSS",
            data: { edp: value },
            success: function (data) {
                debugger;
                var s = '';
                for (var i = 0; i < data.length; i++) {
                    s += '<option value="' + data[i].sS_CODE + '">' + data[i].namA_SS + '</option>';
                }
                $("#SS_CODE").html(s);
                $('#SS_CODE_EDIT').html(s);
                //$("#SSList").select2({ placeholder: "Select SS" });
                $("#SS_CODE").val(null);
                $("#SS_CODE").trigger('change');
                $("#SS_CODE_EDIT").val(null);
                $("#SS_CODE_EDIT").trigger('change');

            }
        });
        $.ajax({
            url: '@Url.Action("getTblDtlbyEDPEdit", "RekapTraining")',
            type: "GET",
            data: { edpcode: value},
                //startDate: mFromDate, endDate: mToDate1
                dataType: 'json',
                success: function (data) {
                    $("#NoParticipant").val(data.length);
                    $("#NoParticipantTemp").val(data.length);
                    $("#NoParticipantTemp_EDIT").val(data.length);
                    $("#tbodyiddtl").empty();
                    if (data.length != 0) {
                        debugger;
                        var tr;
                        //Append each row to html table
                        for (var i = 0; i < data.length; i++) {
                            debugger;
                            var number = parseInt(i) + 1;
                            tr = $('<tr/>');
                            tr.append("<td>" + number + "</td>");
                            tr.append("<td>" + data[i].sS_CODE + "</td>");
                            tr.append("<td>" + data[i].namA_SS + "</td>");
                            tr.append("<td>" + data[i].nilai + "</td>");
                            tr.append("<td><a onclick=\"openpopup(this, \'" + data[i].sS_CODE + "\');\" id='EditPeserta" + number + "' class='btn btn-sm btn-dark'>Edit</a>&nbsp;<a onclick=\"openpopup(this, \'" + data[i].sS_CODE + "\');\" id='DeletePeserta" + number + "' class='btn btn-sm btn-dark'>Delete</a ></td>");
                            $('#DtlTbl').append(tr);
                        }
                    }

                },
                error: function () {

                }
        });*@
    });
    $('#Periode').on('change', function () {
        var value = $("#Periode").val();
        $("#PeriodeTemp").val(value);
        $("#PeriodeTempUpl").val(value);
        $("#PeriodeTemp_EDIT").val(value);
    });
    $('#Week').on('change', function () {
        var value = $("#Week").val();
        $("#WeekTemp").val(value);
        $("#WeekTempUpl").val(value);
        $("#WeekTemp_EDIT").val(value);
    });
    $('#Date').on('change', function () {
            var value = $("#Date").val();
        $("#DateTemp").val(value);
        $("#DateTempUpl").val(value);
            $("#DateTemp_EDIT").val(value);
            var currentdate = new Date(value);
            var wk = currentdate.getWeek() + 1;
            //var oneJan = new Date(currentdate.getFullYear(), 0, 1);
            //var wk = Math.ceil((((currentdate - oneJan) / 86400000) + oneJan.getDay() + 1) / 7);
            $('#Week').val(wk);
        $("#WeekTemp").val(wk);
        $("#WeekTempUpl").val(wk);
            $("#WeekTemp_EDIT").val(wk);
            var month = "";
            switch (currentdate.getMonth()) {
                case 0:
                    month = "January";
                    break;
                case 1:
                    month = "February";
                    break;
                case 2:
                    month = "March";
                    break;
                case 3:
                    month = "April";
                    break;
                case 4:
                    month = "May";
                    break;
                case 5:
                    month = "June";
                    break;
                case 6:
                    month = "July";
                    break;
                case 7:
                    month = "August";
                    break
                case 8:
                    month = "September";
                    break;
                case 9:
                    month = "October";
                    break;
                case 10:
                    month = "November";
                    break;
                case 11:
                    month = "December";
                    break;
            }
            $("#Periode").val(month);
            $("#Periode").trigger('change');
        $("#PeriodeTemp").val(month);
                    $("#PeriodeTempUpl").val(month);
            $("#PeriodeTemp_EDIT").val(month);
        });
    Date.prototype.getWeek = function () {
            // We have to compare against the first monday of the year not the 01/01
            // 60*60*24*1000 = 86400000
            // 'onejan_next_monday_time' reffers to the miliseconds of the next monday after 01/01

            var day_miliseconds = 86400000,
                onejan = new Date(this.getFullYear(), 0, 1, 0, 0, 0),
                onejan_day = (onejan.getDay() == 0) ? 7 : onejan.getDay(),
                days_for_next_monday = (8 - onejan_day),
                onejan_next_monday_time = onejan.getTime() + (days_for_next_monday * day_miliseconds),
                // If one jan is not a monday, get the first monday of the year
                first_monday_year_time = (onejan_day > 1) ? onejan_next_monday_time : onejan.getTime(),
                this_date = new Date(this.getFullYear(), this.getMonth(), this.getDate(), 0, 0, 0), // This at 00:00:00
                this_time = this_date.getTime(),
                days_from_first_monday = Math.round(((this_time - first_monday_year_time) / day_miliseconds));

            var first_monday_year = new Date(first_monday_year_time);

            // We add 1 to "days_from_first_monday" because if "days_from_first_monday" is *7,
            // then 7/7 = 1, and as we are 7 days from first monday,
            // we should be in week number 2 instead of week number 1 (7/7=1)
            // We consider week number as 52 when "days_from_first_monday" is lower than 0,
            // that means the actual week started before the first monday so that means we are on the firsts
            // days of the year (ex: we are on Friday 01/01, then "days_from_first_monday"=-3,
            // so friday 01/01 is part of week number 52 from past year)
            // "days_from_first_monday<=364" because (364+1)/7 == 52, if we are on day 365, then (365+1)/7 >= 52 (Math.ceil(366/7)=53) and thats wrong

            return (days_from_first_monday >= 0 && days_from_first_monday < 364) ? Math.ceil((days_from_first_monday + 1) / 7) : 52;
        }
    $('#Participant').on('change', function () {
        var value = $("#Participant").val();
        $("#ParticipantTemp").val(value);
        $("#ParticipantTempUpl").val(value);
        $("#ParticipantTemp_EDIT").val(value);

    });
    $('#NoParticipant').on('change', function () {
        var value = $("#NoParticipant").val();
        $("#NoParticipantTemp").val(value);
        $("#NoParticipantTempUpl").val(value);
        $("#NoParticipantTemp_EDIT").val(value);

    });
    $('#Days').on('change', function () {
        var value = $("#Days").val();
        $("#DaysTemp").val(value);
        $("#DaysTempUpl").val(value);
        $("#DaysTemp_EDIT").val(value);
    });
    $('#Hours').on('change', function () {
        var value = $("#Hours").val();
        //value = value.replace(".", ",");
        value = value.replace(",", ".")

        $("#Hours").val(value);
        $("#HoursTemp").val(value);
        $("#HoursTempUpl").val(value);
        $("#HoursTemp_EDIT").val(value);
        var totalparticipant = $("#NoParticipant").val();
        debugger;
        var totalval = parseFloat(value.replace(',', '.')).toFixed(2) * parseFloat(totalparticipant.replace(',', '.')).toFixed(2);
        //$("#TotalHours").val(String(totalval).replace('.', ','));
        //$("#TotalHoursTemp").val(String(totalval).replace('.', ','));
        //$("#TotalHoursTempUpl").val(String(totalval).replace('.', ','));
        //$("#TotalHoursTemp_EDIT").val(String(totalval).replace('.', ','));
        $("#TotalHours").val(String(totalval));
        $("#TotalHoursTemp").val(String(totalval));
        $("#TotalHoursTempUpl").val(String(totalval));
        $("#TotalHoursTemp_EDIT").val(String(totalval));

    });
    $('#TotalHours').on('change', function () {
        var value = $("#TotalHours").val();
        $("#TotalHoursTemp").val(value);
        $("#TotalHoursTempUpl").val(value);
        $("#TotalHoursTemp_EDIT").val(value);

    });
    $('#TrainerList').on('change', function () {
        //var value = $("#TrainerList").val();
        //var data = $("#TrainerList").select2('data')
        var value = $("#TrainerList").val();
        $("#TrainerListTemp").val($("#TrainerList").val()).trigger('change');
        $("#TrainerListTempUpl").val($("#TrainerList").val()).trigger('change');
        $("#TrainerListTemp_EDIT").val($("#TrainerList").val()).trigger('change');
        //$("#Trainer").val(data[0].text);
        //$("#TrainerTemp").val(data[0].text);
        //$("#TrainerTemp_EDIT").val(data[0].text);
        //$("#idTrainerTemp").val(value);
        //$("#idTrainerTemp_EDIT").val(value);

    });
    function openpopup(sender,sscode) {
        debugger;
        $("#datamode").val(sender.id);
        window.lastclicked = sender.id;
        if (sender.id == "addPeserta") {
            $("#SS_CODE").val(null);
            $("#SS_CODE").trigger('change');
            //$("#SS_CODE").select2("readonly", false);
            //$("#SS_CODE").removeAttr('readonly');
            $("#NILAI").val(0);
            $("#NoSertifikat").val("");
            $("#isCertified").prop("checked", false);
            $("#isPresent").prop("checked", false);

            $("#dialog").dialog("open");
            $("#btnPopupMod").html('Update Peserta');

        }
        else if (sender.id == "UploadPeserta") {
            $("#dialogUpload").dialog("open");
        }
        else {
            var lastclickbtn = window.lastclicked;
            var splitbtn = lastclickbtn.split("EditPeserta");
            //$("#SS_CODE").select2("readonly", true);
            $("#SS_CODE_EDIT").attr("readonly", "readonly");
            $("#RD_CODE_EDIT").attr("readonly", "readonly");
            $("#EMP_CODE_EDIT").attr("readonly", "readonly");
            $("#EMP_TYPE_EDIT").attr("readonly", "readonly");
            var trnid = $("#TRN_IDtemp_EDIT").val();
            var code = sscode;
            $.ajax({
            url: '@Url.Action("getSSEditAddEdit", "RekapTraining")',
                type: "GET",
                data: { sscode: code, trn_id: trnid },
                //startDate: mFromDate, endDate: mToDate1
                dataType: 'json',
                success: function (data) {
                    debugger;
                    if (splitbtn.length > 1) {
                        var emptype = data.emP_TYPE;
                        $("#EMP_TYPE_EDIT").val(emptype);
                        $("#EMP_TYPE_EDIT").trigger('change');
                        if (emptype == "AM" || emptype == "DM" || emptype == "EMP") {
                            $("#EMP_CODE_EDIT").val(data.sS_CODE);
                            $("#EMP_CODE_EDIT").trigger('change');
                            $("#SS_CODE_EDIT").next(".select2-container").hide();
                            $("#RD_CODE_EDIT").next(".select2-container").hide();
                            $("#EMP_CODE_EDIT").next(".select2-container").show();
                        } else if (emptype == "SS") {
                            $("#SS_CODE_EDIT").val(data.sS_CODE);
                            $("#SS_CODE_EDIT").trigger('change');
                            $("#SS_CODE_EDIT").next(".select2-container").show();
                            $("#RD_CODE_EDIT").next(".select2-container").hide();
                            $("#EMP_CODE_EDIT").next(".select2-container").hide();

                        } else if (emptype == "RD") {
                            $("#RD_CODE_EDIT").val(data.sS_CODE);
                            $("#RD_CODE_EDIT").trigger('change');
                            $("#SS_CODE_EDIT").next(".select2-container").hide();
                            $("#RD_CODE_EDIT").next(".select2-container").show();
                            $("#EMP_CODE_EDIT").next(".select2-container").hide();
                        }
                        $("#NILAI_EDIT").val(data.nilai);
                        $("#NoSertifikat_EDIT").val(data.noSertifikat);
                        $("#ScoreId").val(data.scoreId);
                        var isCert = data.sertifikat;
                        var filesertifikat = data.filE_SERTIFIKAT;
                        $("#fileNameSertifikat").html(filesertifikat);
                        if (data.scoreId != 0) {
                            $("#fileNameSertifikat").attr("href", "/RekapTraining/DownloadSertifikat?fname=" + filesertifikat);
                        } else {
                            $("#fileNameSertifikat").attr("href", "/RekapTraining/DownloadSertifikatTemp?fname=" + filesertifikat);
                        }
                        if (isCert == 1) {
                            $("#isCertified_EDIT").prop("checked", true);

                        } else {
                            $("#isCertified_EDIT").prop("checked", false);
                        }
                        if (data.ispresent == "1") {
                            $("#isPresent_EDIT").prop("checked", true);
                            $("#NILAI_EDIT").prop("disabled", false);
                            $("#isCertified_EDIT").prop("disabled", false);
                            $("#fileSertifikat_EDIT").prop("disabled", false);
                            $("#NoSertifikat_EDIT").prop("disabled", false);
                        } else {
                            $("#isPresent_EDIT").prop("checked", false);
                            $("#NILAI_EDIT").prop("disabled", true);
                            $("#isCertified_EDIT").prop("disabled", true);
                            $("#fileSertifikat_EDIT").prop("disabled", true);
                            $("#NoSertifikat_EDIT").prop("disabled", true);
                        }
                        //$("#NILAI_EDIT").removeAttr("disabled");;
                        //$("#NoSertifikat_EDIT").removeAttr("disabled");;
                        //$("#isCertified_EDIT").removeAttr("disabled");
                        //$("#fileSertifikat_EDIT").removeAttr("disabled");

                        $("#btnPopupMod").attr('value', 'Update Peserta');

                    } else {
                        var emptype = data.emP_TYPE;
                        $("#EMP_TYPE_EDIT").val(emptype);
                        $("#EMP_TYPE_EDIT").trigger('change');
                        if (emptype == "AM" || emptype == "DM" || emptype == "EMP") {
                            $("#EMP_CODE_EDIT").val(data.sS_CODE);
                            $("#EMP_CODE_EDIT").trigger('change');
                            $("#SS_CODE_EDIT").next(".select2-container").hide();
                            $("#RD_CODE_EDIT").next(".select2-container").hide();
                            $("#EMP_CODE_EDIT").next(".select2-container").show();
                        } else if (emptype == "SS") {
                            $("#SS_CODE_EDIT").val(data.sS_CODE);
                            $("#SS_CODE_EDIT").trigger('change');
                            $("#SS_CODE_EDIT").next(".select2-container").show();
                            $("#RD_CODE_EDIT").next(".select2-container").hide();
                            $("#EMP_CODE_EDIT").next(".select2-container").hide();

                        } else if (emptype == "RD") {
                            $("#RD_CODE_EDIT").val(data.sS_CODE);
                            $("#RD_CODE_EDIT").trigger('change');
                            $("#SS_CODE_EDIT").next(".select2-container").hide();
                            $("#RD_CODE_EDIT").next(".select2-container").show();
                            $("#EMP_CODE_EDIT").next(".select2-container").hide();
                        }
                        $("#NILAI_EDIT").val(data.nilai);

                        $("#NoSertifikat_EDIT").val(data.noSertifikat);

                        var isCert = data.sertifikat;
                        var filesertifikat = data.filE_SERTIFIKAT;
                        if (isCert == 1) {
                            $("#isCertified_EDIT").prop("checked", true);

                        } else {
                            $("#isCertified_EDIT").prop("checked", false);
                        }
                        if (data.ispresent == "1") {
                            $("#isPresent_EDIT").prop("checked", true);
                            $("#NILAI_EDIT").prop("disabled", false);
                            $("#isCertified_EDIT").prop("disabled", false);
                            $("#fileSertifikat_EDIT").prop("disabled", false);
                            $("#NoSertifikat_EDIT").prop("disabled", false);
                        } else {
                            $("#isPresent_EDIT").prop("checked", false);
                            $("#NILAI_EDIT").prop("disabled", true);
                            $("#isCertified_EDIT").prop("disabled", true);
                            $("#fileSertifikat_EDIT").prop("disabled", true);
                            $("#NoSertifikat_EDIT").prop("disabled", true);
                        }
                        //$("#NILAI_EDIT").attr("disabled", "disabled");
                        //$("#NoSertifikat_EDIT").attr("disabled", "disabled");
                        //$("#isCertified_EDIT").attr("disabled", "disabled");
                        $("#isPresent_EDIT").attr("disabled", "disabled");

                        //$("#fileSertifikat_EDIT").attr("disabled", "disabled");
                        $("#btnPopupMod").attr('value', 'Hapus Peserta');
                    }

                },
                error: function () {

                }

        });
            $("#dialogEdit").dialog("open");

        }
    }

    function allowOnlyNumber(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
    $('#Hours').keypress(function (event) {
            if ((event.which != 46 || $(this).val().indexOf(',') != -1) && (event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }
        });
    function alertfirst() {
        if (confirm("Are you sure saving data?")) {
            $('#formcreate').submit();
        } else {
            return false;
        }
    }
    function alertfirst2(sender) {
        debugger;
        var type = $('#EMP_TYPE').val();
        if (type == "AM" || type == "DM" || type == "EMP") {
            var sscode = $('#EMP_CODE').val();
            if (sscode != "" && sscode != null) {
                if (confirm("Are you sure saving data?")) {
                    $('#formdtl').submit();

                    //SaveForm();
                } else {
                    return false;
                }
            } else {
                alert("please fill Daftar peserta")
                return false;

            }
        } else
            if (type == "SS") {
                var sscode = $('#SS_CODE').val();
                if (sscode != "" && sscode != null) {
                    if (confirm("Are you sure saving data?")) {
                        $('#formdtl').submit();

                        //SaveForm();
                    } else {
                        return false;
                    }
                } else {
                    alert("please fill Daftar peserta")
                    return false;

                }
            }
            else
                if (type == "RD") {
                    var sscode = $('#RD_CODE').val();
                    if (sscode != "" && sscode != null) {
                        if (confirm("Are you sure saving data?")) {
                            $('#formdtl').submit();

                            //SaveForm();
                        } else {
                            return false;
                        }
                    } else {
                        alert("please fill Daftar peserta")
                        return false;

                    }
                }

        }
        function alertfirstupl(sender) {
            debugger;

            if (confirm("Are you sure saving data?")) {
                $('#formdtlupload').submit();

                //SaveForm();
            } else {
                return false;
            }

        }
    function alertfirst3(sender) {
        debugger;

        if (confirm("Are you sure saving data?")) {
            $('#formdtlEdit').submit();

            //SaveForm();
        } else {
            return false;
        }

    }
    function Clear() {
        $("#EDP").val(null);
        $("#EDP").trigger('change');

        @*$.ajax({
            url: '@Url.Action("resetTblDtlEdit", "RekapTraining")',
                type: "GET",
                //data: { id: value, sscode: value2 },
                //startDate: mFromDate, endDate: mToDate1
                dataType: 'json',
                success: function (data) {
                    $("#NoParticipant").val(data.length);
                    $("#NoParticipantTemp").val(data.length);
                    $("#NoParticipantTemp_EDIT").val(data.length);
                    $("#tbodyiddtl").empty();
                    if (data.length != 0) {
                        debugger;
                        var tr;
                        //Append each row to html table
                        for (var i = 0; i < data.length; i++) {
                            debugger;
                            var number = parseInt(i) + 1;
                            tr = $('<tr/>');
                            tr.append("<td>" + number + "</td>");
                            tr.append("<td>" + data[i].sS_CODE + "</td>");
                            tr.append("<td>" + data[i].namA_SS + "</td>");
                            tr.append("<td>" + data[i].nilai + "</td>");

                            tr.append("<td><a onclick=\"openpopup(this, \'" + data[i].sS_CODE + "\');\" id='EditPeserta" + number + "' class='btn btn-sm btn-dark'>Edit</a>&nbsp;<a onclick=\"openpopup(this, \'" + data[i].sS_CODE + "\');\" id='DeletePeserta" + number + "' class='btn btn-sm btn-dark'>Delete</a ></td>");

                            $('#DtlTbl').append(tr);
                        }
                    }

                },
                error: function () {

                }
        });*@

    }
    </script>
}
