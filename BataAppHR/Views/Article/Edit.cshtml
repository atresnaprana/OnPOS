@model BataAppHR.Models.dbArticle

@{
    ViewData["Title"] = "Update Data";
}
<style>
    input.largerCheckbox {
        width: 20px;
        height: 20px;
    }
</style>
<h1>Update Data</h1>
<h3 class="display-5">Form Entry</h3>
<hr />
<form asp-action="Edit" id="formcreate" enctype="multipart/form-data">
    <div class="container">
        <div class="row">
            <div class="col-sm">
                <div class="form-group">
                    <label class="control-label">Article:</label>
                    @Html.DropDownListFor(m => m.Article, new SelectList(Model.listArticle, "articlecode", "articlename"), new { @class = "form-control" })
                    <span asp-validation-for="Article" class="text-danger"></span>
                    <input asp-for="id" type="hidden" class="form-control" />
                </div>
                <div class="form-group">
                    <label class="control-label">Catalog Image: </label>
                    <i style="font-size:smaller">
                        Max: 4MB,
                        file: JPG, JPEG, PNG
                    </i>
                    <br />
                    <input type="file" asp-for="fileImg" />
                    <br />
                    <br />
                    <img id="StorePhotoId" src="@ViewBag.ImageData" width="400" height="200">
                    <span asp-validation-for="fileImg" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="button" value="Simpan data baru" onclick="alertfirst()" class="btn btn-red" />
                </div>
            </div>
        </div>
    </div>
</form>


<div>
    <a asp-action="Index" class="btn btn-dark">Kembali ke List</a>
</div>
@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script>
        $("#Article").select2({
            placeholder: "Select Article",
            initSelection: function (element, callback) {
            },
            dropdownAutoWidth: true,
            width: 'element'
        });
    function allowOnlyNumber(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
    function alertfirst() {

        if (confirm("Are you sure saving data?")) {
            $('#formcreate').submit();
        } else {
            return false;
        }

    }
    $('#fileImg').on('change', function () {
        const size =
            (this.files[0].size / 1024 / 1024).toFixed(2);
        debugger;
        var errmsg = "";
        if (size > 4) {
            $('#filePhoto').val('');
            //alert("File size maximum is 4 MB");
            errmsg += "File size maximum is 4 MB \r\n";
        }
        var fileExtension = ['jpeg', 'jpg', 'png'];
        if ($.inArray($(this).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
            //alert("Only formats are allowed : " + fileExtension.join(', '));
            errmsg += "Only formats are allowed : " + fileExtension.join(', ');

        }
        if (errmsg != "") {
            $('#filePhoto').val('');
            alert(errmsg);
        }

    });
    </script>
}


